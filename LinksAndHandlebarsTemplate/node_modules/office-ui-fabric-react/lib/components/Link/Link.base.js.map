{"version":3,"file":"Link.base.js","sourceRoot":"../src/","sources":["components/Link/Link.base.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,6CAQyB;AAQzB,IAAM,aAAa,GAAG,8BAAkB,EAAgC,CAAC;AAGzE;IAA8B,oCAA8B;IAD5D;QAAA,qEAyDC;QAvDS,WAAK,GAAG,qBAAS,EAAgD,CAAC;QA8ClE,cAAQ,GAAG,UAAC,EAA2D;YACvE,IAAA,gBAAkC,EAAhC,oBAAO,EAAE,sBAAQ,CAAgB;YAEzC,IAAI,QAAQ,EAAE;gBACZ,EAAE,CAAC,cAAc,EAAE,CAAC;aACrB;iBAAM,IAAI,OAAO,EAAE;gBAClB,OAAO,CAAC,EAAE,CAAC,CAAC;aACb;QACH,CAAC,CAAA;;IACH,CAAC;IArDQ,yBAAM,GAAb;QACQ,IAAA,eAAsE,EAApE,sBAAQ,EAAE,sBAAQ,EAAE,wBAAS,EAAE,cAAI,EAAE,gBAAK,EAAE,wBAAS,CAAgB;QAE7E,IAAM,UAAU,GAAG,aAAa,CAAC,SAAU,EAAE;YAC3C,SAAS,WAAA;YACT,QAAQ,EAAE,CAAC,IAAI;YACf,UAAU,EAAE,QAAQ;YACpB,KAAK,EAAE,KAAM;SACd,CAAC,CAAC;QAEH,IAAM,aAAa,GAAgB,CACjC,8CACO,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,4BAAgB,CAAC,IACjD,SAAS,EAAG,UAAU,CAAC,IAAI,EAC3B,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,GAAG,EAAG,IAAI,CAAC,KAAK,EAChB,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,MAAM,mBACV,QAAQ,KAEtB,QAAQ,CACR,CACL,CAAC;QAEF,IAAM,aAAa,GAAgB,CACjC,mDACO,0BAAc,CAAC,IAAI,CAAC,KAAK,EAAE,4BAAgB,CAAC,IACjD,SAAS,EAAG,UAAU,CAAC,IAAI,EAC3B,OAAO,EAAG,IAAI,CAAC,QAAQ,EACvB,GAAG,EAAG,IAAI,CAAC,KAAK,mBACA,QAAQ,KAEtB,QAAQ,CACH,CACV,CAAC;QAEF,OAAO,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC;IAC9C,CAAC;IAEM,wBAAK,GAAZ;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SAC1B;IACH,CAAC;IA7CU,QAAQ;QADpB,wBAAY,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;OAChC,QAAQ,CAwDpB;IAAD,eAAC;CAAA,AAxDD,CAA8B,yBAAa,GAwD1C;AAxDY,4BAAQ","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  anchorProperties,\r\n  BaseComponent,\r\n  buttonProperties,\r\n  classNamesFunction,\r\n  customizable,\r\n  getNativeProps,\r\n  createRef\r\n} from '../../Utilities';\r\nimport {\r\n  ILink,\r\n  ILinkProps,\r\n  ILinkStyleProps,\r\n  ILinkStyles\r\n} from './Link.types';\r\n\r\nconst getClassNames = classNamesFunction<ILinkStyleProps, ILinkStyles>();\r\n\r\n@customizable('Link', ['theme', 'getStyles'])\r\nexport class LinkBase extends BaseComponent<ILinkProps, any> implements ILink {\r\n  private _link = createRef<HTMLAnchorElement | HTMLButtonElement | null>();\r\n\r\n  public render() {\r\n    const { disabled, children, className, href, theme, getStyles } = this.props;\r\n\r\n    const classNames = getClassNames(getStyles!, {\r\n      className,\r\n      isButton: !href,\r\n      isDisabled: disabled,\r\n      theme: theme!\r\n    });\r\n\r\n    const anchorElement: JSX.Element = (\r\n      <a\r\n        { ...getNativeProps(this.props, anchorProperties) }\r\n        className={ classNames.root }\r\n        onClick={ this._onClick }\r\n        ref={ this._link }\r\n        target={ this.props.target }\r\n        aria-disabled={ disabled }\r\n      >\r\n        { children }\r\n      </a>\r\n    );\r\n\r\n    const buttonElement: JSX.Element = (\r\n      <button\r\n        { ...getNativeProps(this.props, buttonProperties) }\r\n        className={ classNames.root }\r\n        onClick={ this._onClick }\r\n        ref={ this._link }\r\n        aria-disabled={ disabled }\r\n      >\r\n        { children }\r\n      </button>\r\n    );\r\n\r\n    return href ? anchorElement : buttonElement;\r\n  }\r\n\r\n  public focus() {\r\n    if (this._link.value) {\r\n      this._link.value.focus();\r\n    }\r\n  }\r\n\r\n  private _onClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\r\n    const { onClick, disabled } = this.props;\r\n\r\n    if (disabled) {\r\n      ev.preventDefault();\r\n    } else if (onClick) {\r\n      onClick(ev);\r\n    }\r\n  }\r\n}\r\n"]}