{"version":3,"file":"ProgressIndicator.base.js","sourceRoot":"../src/","sources":["components/ProgressIndicator/ProgressIndicator.base.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,6CAGyB;AAEzB,uDAAyD;AACzD,IAAM,MAAM,GAAQ,YAAY,CAAC;AAEjC,sDAAsD;AACtD,mDAAmD;AACnD,IAAM,cAAc,GAAG,IAAI,CAAC;AAE5B;IAA2C,iDAA0C;IAOnF,+BAAY,KAA8B;QAA1C,YACE,kBAAM,KAAK,CAAC,SAMb;QAJC,KAAI,CAAC,iBAAiB,CAAC;YACrB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;;IAEL,CAAC;IAEM,sCAAM,GAAb;QACQ,IAAA,eAA6D,EAA3D,gBAAK,EAAE,4BAAW,EAAE,wBAAS,EAAE,gCAAa,CAAgB;QAChE,IAAA,eAAuC,EAArC,gBAAK,EAAE,oCAAe,CAAgB;QAE5C,2BAA2B;QAC3B,IAAI,KAAK,EAAE;YACT,KAAK,GAAG,KAAK,CAAC;SACf;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,KAAK,SAAS,EAAE;YAC5C,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,eAAgB,GAAG,GAAG,CAAC,CAAC,CAAC;SACtE;QAED,OAAO,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC;YAClE,6BAAK,SAAS,EAAG,eAAG,CAAC,+BAA+B,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAK,KAAK,CAAQ;YACxF,6BAAK,SAAS,EAAG,eAAG,CAAC,mCAAmC,EAAE,MAAM,CAAC,YAAY,CAAC;gBAC5E,6BAAK,SAAS,EAAG,eAAG,CAAC,oCAAoC,EAAE,MAAM,CAAC,aAAa,CAAC,GAAK;gBACrF,6BACE,SAAS,EAAG,eAAG,CACb,kCAAkC,EAClC,MAAM,CAAC,WAAW,EAClB,eAAe,IAAI,eAAe,GAAG,cAAc,IAAI,kBAAkB,EACzE,eAAe,KAAK,SAAS,IAAI,MAAM,CAAC,aAAa,CACtD,EACD,KAAK,EAAG,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,eAAe,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS,EACpF,IAAI,EAAC,aAAa,mBACF,CAAC,mBACD,GAAG,mBACH,eAAe,oBACd,aAAa,GAC9B,CACE;YACN,6BAAK,SAAS,EAAG,eAAG,CAAC,sCAAsC,EAAE,MAAM,CAAC,eAAe,CAAC,IAAK,WAAW,CAAQ,CACxG,CACP,CAAC;IACJ,CAAC;IAnDa,kCAAY,GAAG;QAC3B,KAAK,EAAE,EAAE;QACT,WAAW,EAAE,EAAE;QACf,KAAK,EAAE,GAAG;KACX,CAAC;IAgDJ,4BAAC;CAAA,AArDD,CAA2C,yBAAa,GAqDvD;AArDY,sDAAqB","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  css\r\n} from '../../Utilities';\r\nimport { IProgressIndicatorProps } from './ProgressIndicator.types';\r\nimport * as stylesImport from './ProgressIndicator.scss';\r\nconst styles: any = stylesImport;\r\n\r\n// if the percentComplete is near 0, don't animate it.\r\n// This prevents animations on reset to 0 scenarios\r\nconst ZERO_THRESHOLD = 0.01;\r\n\r\nexport class ProgressIndicatorBase extends BaseComponent<IProgressIndicatorProps, {}> {\r\n  public static defaultProps = {\r\n    label: '',\r\n    description: '',\r\n    width: 180\r\n  };\r\n\r\n  constructor(props: IProgressIndicatorProps) {\r\n    super(props);\r\n\r\n    this._warnDeprecations({\r\n      title: 'label'\r\n    });\r\n\r\n  }\r\n\r\n  public render() {\r\n    const { title, description, className, ariaValueText } = this.props;\r\n    let { label, percentComplete } = this.props;\r\n\r\n    // Handle deprecated value.\r\n    if (title) {\r\n      label = title;\r\n    }\r\n\r\n    if (this.props.percentComplete !== undefined) {\r\n      percentComplete = Math.min(100, Math.max(0, percentComplete! * 100));\r\n    }\r\n\r\n    return (\r\n      <div className={ css('ms-ProgressIndicator', styles.root, className) }>\r\n        <div className={ css('ms-ProgressIndicator-itemName', styles.itemName) }>{ label }</div>\r\n        <div className={ css('ms-ProgressIndicator-itemProgress', styles.itemProgress) }>\r\n          <div className={ css('ms-ProgressIndicator-progressTrack', styles.progressTrack) } />\r\n          <div\r\n            className={ css(\r\n              'ms-ProgressIndicator-progressBar',\r\n              styles.progressBar,\r\n              percentComplete && percentComplete > ZERO_THRESHOLD && 'smoothTransition',\r\n              percentComplete === undefined && styles.indeterminate\r\n            ) }\r\n            style={ percentComplete !== undefined ? { width: percentComplete + '%' } : undefined }\r\n            role='progressbar'\r\n            aria-valuemin={ 0 }\r\n            aria-valuemax={ 100 }\r\n            aria-valuenow={ percentComplete }\r\n            aria-valuetext={ ariaValueText }\r\n          />\r\n        </div>\r\n        <div className={ css('ms-ProgressIndicator-itemDescription', styles.itemDescription) }>{ description }</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}