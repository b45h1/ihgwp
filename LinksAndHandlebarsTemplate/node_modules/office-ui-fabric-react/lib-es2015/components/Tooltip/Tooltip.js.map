{"version":3,"file":"Tooltip.js","sourceRoot":"../src/","sources":["components/Tooltip/Tooltip.tsx"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,sCAAsC;AACtC,OAAO,EACL,aAAa,EACb,GAAG,EACH,cAAc,EACd,aAAa,EACd,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAiB,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC9D,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAExC,OAAO,KAAK,YAAY,MAAM,gBAAgB,CAAC;AAC/C,IAAM,MAAM,GAAQ,YAAY,CAAC;AACjC,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAEjE;IAA6B,mCAAiC;IAA9D;;IAkEA,CAAC;IAlDQ,wBAAM,GAAb;QACQ,IAAA,eASQ,EARZ,gCAAa,EACb,8BAAY,EACZ,oCAAe,EACf,gDAAqB,EACrB,gBAAK,EACL,UAAE,EACF,sBAAQ,EACR,uBAAuC,EAAvC,4DAAuC,CAC1B;QAEf,OAAO,CACL,oBAAC,OAAO,qBACN,MAAM,EAAG,aAAa,EACtB,eAAe,EAAG,eAAe,EACjC,qBAAqB,EAAG,qBAAqB,IACxC,YAAY,EACZ,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,IAC9C,SAAS,EAAG,WAAW,CACrB,YAAY,EACZ,mBAAmB,CAAC,SAAS,EAC7B,MAAM,CAAC,IAAI,EACX,CAAC,KAAK,KAAK,YAAY,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,cAAc,EACxD,CAAC,KAAK,KAAK,YAAY,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,YAAY,EACpD,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAC7C,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EACjD,IAAI,CAAC,KAAK,CAAC,SAAS,CACrB;YAED,6BACE,SAAS,EAAG,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,OAAO,CAAC,EACrD,EAAE,EAAG,EAAE,EACP,IAAI,EAAC,SAAS,EACd,YAAY,EAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EACtC,YAAY,EAAG,IAAI,CAAC,KAAK,CAAC,YAAY,IAEpC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAChD,CACG,CACZ,CAAC;IACJ,CAAC;IAEO,kCAAgB,GAAxB,UAAyB,KAAoB;QAC3C,OAAO,CACL,2BAAG,SAAS,EAAG,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,OAAO,CAAC,IACpD,KAAK,CAAC,OAAO,CACb,CACL,CAAC;IACJ,CAAC;IA/DD,+BAA+B;IACjB,oBAAY,GAAG;QAC3B,eAAe,mBAA2B;QAC1C,KAAK,EAAE,YAAY,CAAC,MAAM;QAC1B,QAAQ,EAAE,OAAO;QACjB,YAAY,EAAE;YACZ,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,CAAC;YACX,eAAe,EAAE,IAAI;YACrB,UAAU,EAAE,KAAK;SAClB;KACF,CAAC;IAoDJ,cAAC;CAAA,AAlED,CAA6B,aAAa,GAkEzC;SAlEY,OAAO","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getNativeProps,\r\n  divProperties\r\n} from '../../Utilities';\r\nimport { ITooltipProps, TooltipDelay } from './Tooltip.types';\r\nimport { Callout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport * as stylesImport from './Tooltip.scss';\r\nconst styles: any = stylesImport;\r\nimport { AnimationClassNames, mergeStyles } from '../../Styling';\r\n\r\nexport class Tooltip extends BaseComponent<ITooltipProps, any> {\r\n\r\n  // Specify default props values\r\n  public static defaultProps = {\r\n    directionalHint: DirectionalHint.topCenter,\r\n    delay: TooltipDelay.medium,\r\n    maxWidth: '364px',\r\n    calloutProps: {\r\n      isBeakVisible: true,\r\n      beakWidth: 16,\r\n      gapSpace: 0,\r\n      setInitialFocus: true,\r\n      doNotLayer: false\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      targetElement,\r\n      calloutProps,\r\n      directionalHint,\r\n      directionalHintForRTL,\r\n      delay,\r\n      id,\r\n      maxWidth,\r\n      onRenderContent = this._onRenderContent\r\n    } = this.props;\r\n\r\n    return (\r\n      <Callout\r\n        target={ targetElement }\r\n        directionalHint={ directionalHint }\r\n        directionalHintForRTL={ directionalHintForRTL }\r\n        { ...calloutProps }\r\n        { ...getNativeProps(this.props, divProperties) }\r\n        className={ mergeStyles(\r\n          'ms-Tooltip',\r\n          AnimationClassNames.fadeIn200,\r\n          styles.root,\r\n          (delay === TooltipDelay.medium) && styles.hasMediumDelay,\r\n          (delay === TooltipDelay.long) && styles.hasLongDelay,\r\n          (maxWidth !== null) && { maxWidth: maxWidth },\r\n          calloutProps ? calloutProps.className : undefined,\r\n          this.props.className\r\n        ) }\r\n      >\r\n        <div\r\n          className={ css('ms-Tooltip-content', styles.content) }\r\n          id={ id }\r\n          role='tooltip'\r\n          onMouseEnter={ this.props.onMouseEnter }\r\n          onMouseLeave={ this.props.onMouseLeave }\r\n        >\r\n          { onRenderContent(this.props, this._onRenderContent) }\r\n        </div>\r\n      </Callout >\r\n    );\r\n  }\r\n\r\n  private _onRenderContent(props: ITooltipProps): JSX.Element {\r\n    return (\r\n      <p className={ css('ms-Tooltip-subText', styles.subText) }>\r\n        { props.content }\r\n      </p>\r\n    );\r\n  }\r\n}\r\n"]}