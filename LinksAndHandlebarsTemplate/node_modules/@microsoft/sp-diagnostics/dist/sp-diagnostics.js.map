{"version":3,"sources":["webpack:///../webpack/bootstrap f8ec6ac27dc3c76b0e19","webpack:///../external \"@microsoft/sp-core-library\"","webpack:///.././lib/Api/LogSource.js","webpack:///.././lib/Api/LogManager/CircularBuffer.js","webpack:///.././lib/Api/LogManager/LogManager.js","webpack:///.././lib/Api/Trace/LogEvent.js","webpack:///.././lib/Api/LogLevel.js","webpack:///.././lib/Api/Trace/DefaultTraceHandler.js","webpack:///.././lib/Api/Trace/TraceLogger.js","webpack:///.././lib/Api/LogFeature.js","webpack:///.././lib/Api/LogType.js","webpack:///.././lib/Api/LogEntry.js","webpack:///.././lib/DiagnosticsSettingsManager.js","webpack:///.././lib/Diagnostics.js","webpack:///.././lib/Api/Engagement/DefaultEngagementHandler.js","webpack:///.././lib/Api/Engagement/EngagementLogger.js","webpack:///.././lib/Api/ExecutionQueue.js","webpack:///.././lib/Api/Qos/QosLogger.js","webpack:///.././lib/Api/Qos/QosMonitor.js","webpack:///.././lib/index.js","webpack:///../external \"@microsoft/sp-lodash-subset\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,+C;;;;;;;;;;;;;;ACA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;;ACxBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;ACxF8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uCAAuC;;;ACNxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;ACjBmB;AACnB;AACmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0CAA0C,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iEAAiE;AAC1G;AACA;AACA;AACA,gDAAgD,yCAAyC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AChGA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;ACNA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;;;ACNA;AACA;AACA;AACA;AACA,oCAAoC,kCAA8B;AAClE,iCAAiC,6BAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC9B8B;AACH;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;ACrCc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;ACvEA;AACA;AACA;AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iE;AACA;AACA;AACA;AACA;AACA,gD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6BAA6B,G;AAC3E,4CAA4C,2BAA2B,G;AACvE;AACA;AACA;AACA;AACA,CAAC;AACD;;;AC1E+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0BAA0B;AACpE,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,0DAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC;AAC5E;AACA;AACA;AACA,uCAAuC,mCAAmC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,EAAE,qBAAqB,EAAE,wBAAwB,EAAE;AAClH;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;AC/IkC;AACH;AACE;AAC4C;AAC/C;AACI;AACH;AACC;AACK;AACJ;AACM;AACN;AACD;AACK;;;;;;;ACbrC,+C","file":"sp-diagnostics.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f8ec6ac27dc3c76b0e19","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@microsoft/sp-core-library\"\n// module id = 0\n// module chunks = 0","import { ServiceKey, Validate } from '@microsoft/sp-core-library';\nvar LogSource = (function () {\n    function LogSource(id) {\n        Validate.isNotNullOrUndefined(id, 'id');\n        this._id = id;\n    }\n    LogSource.create = function (id) {\n        return new LogSource(id);\n    };\n    Object.defineProperty(LogSource.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LogSource.prototype.isEmpty = function () {\n        return this._id.length === 0;\n    };\n    return LogSource;\n}());\nexport default LogSource;\nexport var logSourceServiceKey = ServiceKey.createCustom('sp-client-base:LogSource', function (serviceScope) {\n    return LogSource.create('');\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/LogSource.js\n// module id = null\n// module chunks = ","var CircularBuffer = (function () {\n    function CircularBuffer(size) {\n        this._head = -1;\n        this._count = 0;\n        this._isIterating = false;\n        if (size <= 0) {\n            throw new Error('Size must be positive');\n        }\n        this._size = size;\n        this._buffer = new Array(size);\n    }\n    Object.defineProperty(CircularBuffer.prototype, \"count\", {\n        get: function () {\n            return this._count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CircularBuffer.prototype.push = function (item) {\n        this._ensureNotIterating();\n        this._head++;\n        this._count++;\n        if (this._head === this._size) {\n            this._head = 0;\n        }\n        this._buffer[this._head] = item;\n    };\n    CircularBuffer.prototype.forEach = function (handle) {\n        if (this._count === 0) {\n            return;\n        }\n        this._isIterating = true;\n        try {\n            var current = this._tail;\n            for (var i = 0; i < this._size; i++) {\n                handle(this._buffer[current]);\n                if (current === this._head) {\n                    break;\n                }\n                current = this._getNext(current);\n            }\n        }\n        finally {\n            this._isIterating = false;\n        }\n    };\n    CircularBuffer.prototype.removeAll = function () {\n        this._ensureNotIterating();\n        this._head = -1;\n        this._count = 0;\n    };\n    Object.defineProperty(CircularBuffer.prototype, \"_tail\", {\n        get: function () {\n            if (this._isNotWrapped()) {\n                return 0;\n            }\n            return this._getNext(this._head);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CircularBuffer.prototype._isNotWrapped = function () {\n        return this._count === (this._head + 1);\n    };\n    CircularBuffer.prototype._getNext = function (index) {\n        var nextIndex = index + 1;\n        if (nextIndex === this._size) {\n            nextIndex = 0;\n        }\n        return nextIndex;\n    };\n    CircularBuffer.prototype._ensureNotIterating = function () {\n        if (this._isIterating) {\n            throw new Error('Circular buffer cannot be modified during iteration');\n        }\n    };\n    return CircularBuffer;\n}());\nexport default CircularBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/LogManager/CircularBuffer.js\n// module id = null\n// module chunks = ","import CircularBuffer from './CircularBuffer';\nvar LogManager = (function () {\n    function LogManager(initialHandler) {\n        this._shouldLogInRealTime = [];\n        this._handlers = [];\n        this._events = new CircularBuffer(LogManager._maxVerboseLog);\n        if (initialHandler) {\n            this.addHandler(initialHandler);\n        }\n    }\n    Object.defineProperty(LogManager, \"_maxVerboseLog\", {\n        get: function () {\n            return 5000;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogManager.prototype, \"events\", {\n        get: function () {\n            return this._events;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LogManager.prototype.addHandler = function (handler) {\n        if (!this._containsHandler(handler)) {\n            this._handlers.push(handler);\n            this._shouldLogInRealTime.push(false);\n        }\n    };\n    LogManager.prototype.log = function (event) {\n        Object.freeze(event);\n        this._events.push(event);\n        this._processLogEvent(event);\n    };\n    LogManager.prototype.removeHandler = function (handler) {\n        var index = this._handlers.indexOf(handler);\n        if (index > -1) {\n            this._handlers.splice(index, 1);\n            this._shouldLogInRealTime.splice(index, 1);\n        }\n    };\n    LogManager.prototype.reset = function () {\n        this._handlers = [];\n        this._shouldLogInRealTime = [];\n        this._events.removeAll();\n    };\n    LogManager.prototype.processAll = function (handler) {\n        if (this._handlers.indexOf(handler) > -1) {\n            this._processAllEvents(handler);\n        }\n    };\n    LogManager.prototype._containsHandler = function (handler) {\n        for (var _i = 0, _a = this._handlers; _i < _a.length; _i++) {\n            var existingHandler = _a[_i];\n            if (existingHandler === handler) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LogManager.prototype._processAllEvents = function (handler) {\n        this._events.forEach(function (event) {\n            if (event) {\n                try {\n                    handler(event);\n                }\n                catch (e) {\n                    console.error('failed to handle event:' + e.toString());\n                }\n            }\n        });\n        this._shouldLogInRealTime[this._handlers.indexOf(handler)] = true;\n    };\n    LogManager.prototype._processLogEvent = function (event) {\n        for (var i = 0; i < this._handlers.length; i++) {\n            if (this._shouldLogInRealTime[i] && event) {\n                try {\n                    this._handlers[i](event);\n                }\n                catch (e) {\n                    console.error('failed to handle event:' + e.toString());\n                }\n            }\n        }\n    };\n    return LogManager;\n}());\nexport default LogManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/LogManager/LogManager.js\n// module id = null\n// module chunks = ","import { logSourceServiceKey } from '../LogSource';\nimport LogManager from '../LogManager/LogManager';\nvar LogEvent = (function () {\n    function LogEvent(source, data, level, serviceScope) {\n        this._validate(source, data);\n        this._timestamp = new Date().getTime();\n        this._scope = this._getScope(serviceScope);\n        this._source = source.substr(0, this._maxSourceLength);\n        this._setData(data);\n        this._level = level;\n        this._prefix = this._getPrefix();\n    }\n    LogEvent.log = function (source, data, level, serviceScope) {\n        var event = new LogEvent(source, data, level, serviceScope);\n        LogEvent.logManager.log(event);\n        return event;\n    };\n    LogEvent.prototype.toString = function () {\n        var timedPrefix = \"[\" + this._timestamp + \"][\" + this._prefix + \"]\";\n        if (this._message) {\n            return timedPrefix + \" \" + this._message;\n        }\n        else if (this._error) {\n            return timedPrefix + \" \" + this._error.toString();\n        }\n        else {\n            return timedPrefix;\n        }\n    };\n    Object.defineProperty(LogEvent.prototype, \"timestamp\", {\n        get: function () {\n            return this._timestamp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogEvent.prototype, \"level\", {\n        get: function () {\n            return this._level;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogEvent.prototype, \"prefix\", {\n        get: function () {\n            return this._prefix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogEvent.prototype, \"scope\", {\n        get: function () {\n            return this._scope;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogEvent.prototype, \"source\", {\n        get: function () {\n            return this._source;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogEvent.prototype, \"message\", {\n        get: function () {\n            return this._message;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogEvent.prototype, \"error\", {\n        get: function () {\n            return this._error;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogEvent.prototype, \"_maxSourceLength\", {\n        get: function () {\n            return 30;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LogEvent.prototype, \"_maxMessageLength\", {\n        get: function () {\n            return 150;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LogEvent.prototype._validate = function (source, data) {\n        if (!source) {\n            throw new Error('source cannot be undefined or null for Logger');\n        }\n        if (!data) {\n            throw new Error('data cannot be undefined or null');\n        }\n    };\n    LogEvent.prototype._setData = function (data) {\n        if (typeof data === 'string') {\n            this._message = data.substr(0, this._maxMessageLength);\n        }\n        else if (data instanceof Error) {\n            this._error = data;\n        }\n    };\n    LogEvent.prototype._getPrefix = function () {\n        var prefix = \"\" + this._source;\n        if (this._scope && !this._scope.isEmpty()) {\n            prefix = this._scope.id.substr(0, this._maxSourceLength) + \".\" + prefix;\n        }\n        return \"\" + prefix;\n    };\n    LogEvent.prototype._getScope = function (serviceScope) {\n        var parentSource;\n        if (serviceScope) {\n            serviceScope.whenFinished(function () {\n                parentSource = serviceScope.consume(logSourceServiceKey);\n            });\n        }\n        return parentSource;\n    };\n    LogEvent.logManager = new LogManager();\n    return LogEvent;\n}());\nexport default LogEvent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/Trace/LogEvent.js\n// module id = null\n// module chunks = ","export var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 1] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n})(LogLevel = LogLevel || (LogLevel = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/LogLevel.js\n// module id = null\n// module chunks = ","var DefaultTraceHandler = (function () {\n    function DefaultTraceHandler() {\n    }\n    DefaultTraceHandler.prototype.log = function (traceLogEvent) {\n        if (!DEPRECATED_UNIT_TEST) {\n            console.log(\"Error: \" + traceLogEvent.data + \", \" +\n                (\"Event Name: \" + traceLogEvent.eventName + \", \") +\n                (\"Result Code: \" + traceLogEvent.resultCode));\n        }\n    };\n    DefaultTraceHandler.prototype.verbose = function (verboseTraceEvent) {\n        if (!DEPRECATED_UNIT_TEST) {\n            console.log(\"Error: \" + verboseTraceEvent.data + \", Event Name: \" + verboseTraceEvent.eventName);\n        }\n    };\n    return DefaultTraceHandler;\n}());\nexport default DefaultTraceHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/Trace/DefaultTraceHandler.js\n// module id = null\n// module chunks = ","import { Validate } from '@microsoft/sp-core-library';\nimport LogEvent from './LogEvent';\nimport { LogLevel } from '../LogLevel';\nimport DefaultTraceHandler from './DefaultTraceHandler';\nimport LogManager from './../LogManager/LogManager';\nvar TraceLogger = (function () {\n    function TraceLogger() {\n    }\n    TraceLogger._addHandler = function (logger) {\n        TraceLogger._logManager.addHandler(logger.log);\n        TraceLogger._logManager.processAll(logger.log);\n        TraceLogger._verboseLogManager.addHandler(logger.verbose);\n        TraceLogger._verboseLogManager.processAll(logger.verbose);\n    };\n    TraceLogger.logError = function (source, error, eventName, resultCode) {\n        Validate.isNotNullOrUndefined(error, 'error');\n        this._log(source, error, eventName, true, resultCode);\n    };\n    TraceLogger.logErrorData = function (data) {\n        Validate.isNotNullOrUndefined(data.error, 'error');\n        var errorInfo = data.logEntry ? data.logEntry.toString() : data.error;\n        this._log(data.source, errorInfo, data.eventName, true, data.resultCode, data.serviceScope);\n    };\n    TraceLogger.logVerbose = function (source, message, eventName) {\n        Validate.isNonemptyString(message, 'message');\n        this._log(source, message, eventName, false, undefined);\n    };\n    TraceLogger.logVerboseData = function (data) {\n        var message = data.logEntry ? data.logEntry.toString() : data.message;\n        this._log(data.source, message, data.eventName, false, undefined, data.serviceScope);\n    };\n    TraceLogger.logErrorWithLogEntry = function (source, logEntry, eventName, resultCode) {\n        Validate.isNotNullOrUndefined(logEntry, 'LogEntry');\n        this._log(source, logEntry.toString(), eventName, true, resultCode);\n    };\n    Object.defineProperty(TraceLogger, \"shouldWriteToConsole\", {\n        get: function () { return TraceLogger._shouldWriteToConsole; },\n        set: function (shouldWrite) {\n            if (TraceLogger._shouldWriteToConsole && !shouldWrite) {\n                TraceLogger._logManager.removeHandler(TraceLogger._defaultLogger.log);\n                TraceLogger._verboseLogManager.removeHandler(TraceLogger._defaultLogger.verbose);\n            }\n            else if (!TraceLogger._shouldWriteToConsole && shouldWrite) {\n                TraceLogger._logManager.addHandler(TraceLogger._defaultLogger.log);\n                TraceLogger._verboseLogManager.addHandler(TraceLogger._defaultLogger.verbose);\n            }\n            TraceLogger._shouldWriteToConsole = shouldWrite;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TraceLogger.logVerboseWithLogEntry = function (source, logEntry, eventName) {\n        Validate.isNotNullOrUndefined(logEntry, 'LogEntry');\n        this._log(source, logEntry.toString(), eventName, false, undefined);\n    };\n    TraceLogger._log = function (source, data, eventName, isError, resultCode, serviceScope) {\n        var enhancedEventName = this._addEventPrefix(source, eventName);\n        var logEvent;\n        if (isError) {\n            logEvent = LogEvent.log(enhancedEventName, data, LogLevel.Error, serviceScope);\n            TraceLogger._logManager.log({ data: data, eventName: logEvent.prefix, resultCode: resultCode });\n        }\n        else {\n            logEvent = LogEvent.log(enhancedEventName, data.toString(), LogLevel.Verbose, serviceScope);\n            TraceLogger._verboseLogManager.log({ data: data, eventName: logEvent.prefix });\n        }\n        if (TraceLogger.shouldWriteToConsole || (DEBUG && !DEPRECATED_UNIT_TEST)) {\n            this._writeToConsole(logEvent, isError, resultCode);\n        }\n    };\n    TraceLogger._addEventPrefix = function (source, eventName) {\n        if (!eventName) {\n            return source.id;\n        }\n        else {\n            return source.id + \".\" + eventName;\n        }\n    };\n    TraceLogger._writeToConsole = function (logEvent, isError, resultCode) {\n        var errorString = logEvent.toString();\n        if (resultCode) {\n            errorString += \". resultCode: \" + resultCode;\n        }\n        if (isError) {\n            console.error(errorString);\n        }\n        else {\n            console.log(errorString);\n        }\n    };\n    TraceLogger._logManager = new LogManager();\n    TraceLogger._verboseLogManager = new LogManager();\n    TraceLogger._defaultLogger = new DefaultTraceHandler();\n    TraceLogger._shouldWriteToConsole = false;\n    return TraceLogger;\n}());\nexport default TraceLogger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/Trace/TraceLogger.js\n// module id = null\n// module chunks = ","var LogFeature = (function () {\n    function LogFeature() {\n    }\n    LogFeature.None = 'None';\n    return LogFeature;\n}());\nexport default LogFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/LogFeature.js\n// module id = null\n// module chunks = ","var LogType;\n(function (LogType) {\n    LogType[LogType[\"Trace\"] = 1] = \"Trace\";\n    LogType[LogType[\"Event\"] = 2] = \"Event\";\n    LogType[LogType[\"Error\"] = 3] = \"Error\";\n})(LogType || (LogType = {}));\nexport default LogType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/LogType.js\n// module id = null\n// module chunks = ","import LogFeature from './LogFeature';\nimport LogType from './LogType';\nvar LogEntry = (function () {\n    function LogEntry(moduleName, logFeature, logType, logProperties) {\n        if (logFeature === void 0) { logFeature = LogFeature.None; }\n        if (logType === void 0) { logType = LogType.Trace; }\n        if (moduleName) {\n            this.moduleName = moduleName;\n            this.logFeature = logFeature;\n            this.logType = logType;\n            this.logProperties = logProperties;\n        }\n        else {\n            throw new Error('moduleName is invalid');\n        }\n    }\n    LogEntry.prototype.toString = function () {\n        var serializedLogProps = undefined;\n        if (this.logProperties) {\n            try {\n                serializedLogProps = JSON.stringify(this.logProperties);\n            }\n            catch (e) {\n                console.log('Error happens in toString():' + e);\n            }\n        }\n        return this.moduleName + \" | \" + this.logFeature + \" | \" + this.logType + \" | \" + serializedLogProps;\n    };\n    return LogEntry;\n}());\nexport default LogEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/LogEntry.js\n// module id = null\n// module chunks = ","import { Guid, _SPKillSwitch } from '@microsoft/sp-core-library';\nimport { cloneDeep, merge } from '@microsoft/sp-lodash-subset';\nvar DiagnosticsSettingsManager = (function () {\n    function DiagnosticsSettingsManager() {\n    }\n    DiagnosticsSettingsManager.initialize = function (settings) {\n        this.settings = cloneDeep(settings);\n        this._initialized = true;\n        this._normalizeSiteIdWebId();\n    };\n    DiagnosticsSettingsManager.updateSettings = function (settings) {\n        this.settings = merge(this.settings, settings);\n        this._normalizeSiteIdWebId();\n    };\n    Object.defineProperty(DiagnosticsSettingsManager, \"isInitialized\", {\n        get: function () {\n            return this._initialized;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DiagnosticsSettingsManager.shouldUseBuffer = function () {\n        var shouldUse = !_SPKillSwitch.isActivated(DiagnosticsSettingsManager.enableCircularBufferLogging, '11/27/2017', 'enableCircularBufferLogging');\n        return shouldUse;\n    };\n    DiagnosticsSettingsManager._normalizeId = function (id) {\n        var guid = Guid.tryParse(id);\n        return guid ? guid.toString() : id;\n    };\n    DiagnosticsSettingsManager._normalizeSiteIdWebId = function () {\n        this.settings.siteId = this._normalizeId(this.settings.siteId);\n        this.settings.webId = this._normalizeId(this.settings.webId);\n    };\n    DiagnosticsSettingsManager.enableCircularBufferLogging = Guid.parse('4b6e1a58-3e0c-43e2-b9cb-1a470f6fe402');\n    DiagnosticsSettingsManager._initialized = false;\n    return DiagnosticsSettingsManager;\n}());\nexport default DiagnosticsSettingsManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/DiagnosticsSettingsManager.js\n// module id = null\n// module chunks = ","import { Log } from '@microsoft/sp-core-library';\nimport DiagnosticsSettingsManager from './DiagnosticsSettingsManager';\nimport TraceLogger from './Api/Trace/TraceLogger';\nvar Diagnostics = (function () {\n    function Diagnostics() {\n    }\n    Diagnostics.initialize = function (settings) {\n        if (!Diagnostics._isInitialized) {\n            DiagnosticsSettingsManager.initialize(settings);\n            TraceLogger.shouldWriteToConsole = settings.enableConsoleLog;\n            TraceLogger._addHandler({\n                log: function (traceEvent) {\n                    Log.info(traceEvent.data.toString(), \"EventName:\" + traceEvent.eventName + \", ResultCome: \" + traceEvent.resultCode);\n                },\n                verbose: function (traceEvent) {\n                    Log.verbose(traceEvent.data.toString(), traceEvent.eventName);\n                }\n            });\n            Diagnostics._isInitialized = true;\n        }\n    };\n    Object.defineProperty(Diagnostics, \"isInitialized\", {\n        get: function () {\n            return this._isInitialized;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Diagnostics.updateSettings = function (settings) {\n        DiagnosticsSettingsManager.updateSettings(settings);\n    };\n    Diagnostics._isInitialized = false;\n    return Diagnostics;\n}());\nexport default Diagnostics;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Diagnostics.js\n// module id = null\n// module chunks = ","var DefaultEngagementHandler = (function () {\n    function DefaultEngagementHandler() {\n    }\n    DefaultEngagementHandler.prototype.logData = function (data) {\n        console.log(\"TagName: \" + data.name + \", Action Name: \" + data.extraData);\n    };\n    return DefaultEngagementHandler;\n}());\nexport default DefaultEngagementHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/Engagement/DefaultEngagementHandler.js\n// module id = null\n// module chunks = ","import LogManager from '../LogManager/LogManager';\nimport DefaultEngagementHandler from './DefaultEngagementHandler';\nimport DiagnosticsSettingsManager from '../../DiagnosticsSettingsManager';\nvar EngagementLogger = (function () {\n    function EngagementLogger() {\n    }\n    EngagementLogger._addHandler = function (logger) {\n        if (DiagnosticsSettingsManager.shouldUseBuffer()) {\n            EngagementLogger._handler = function (e) { logger.logData(e); };\n            EngagementLogger._logManager.addHandler(EngagementLogger._handler);\n        }\n        else {\n            EngagementLogger._logger = logger;\n        }\n    };\n    EngagementLogger.startRealTimeProcessing = function () {\n        if (!this._shouldProcessInRealTime) {\n            EngagementLogger._logManager.processAll(EngagementLogger._handler);\n            this._shouldProcessInRealTime = true;\n        }\n    };\n    EngagementLogger.log = function (engagementData) {\n        EngagementLogger._logEngagementData(engagementData);\n    };\n    EngagementLogger.logEvent = function (tagName, actionName) {\n        var logData = { name: tagName };\n        if (actionName && actionName.length !== 0) {\n            logData.extraData = { action: actionName };\n        }\n        EngagementLogger._logEngagementData(logData);\n    };\n    EngagementLogger.logEventWithLogEntry = function (logEntry) {\n        var logData = {\n            name: logEntry.moduleName + '.' + logEntry.logFeature,\n            extraData: logEntry.logProperties\n        };\n        EngagementLogger._logEngagementData(logData, true);\n    };\n    EngagementLogger._logEngagementData = function (engagementData, isLogEntry) {\n        if (isLogEntry === void 0) { isLogEntry = false; }\n        if (!engagementData.name || engagementData.name.length === 0) {\n            throw new Error('LogEntry is invalid');\n        }\n        EngagementLogger._checkValidTagName(engagementData, isLogEntry);\n        EngagementLogger._addContextData(engagementData);\n        if (DiagnosticsSettingsManager.shouldUseBuffer()) {\n            EngagementLogger._logManager.log(engagementData);\n        }\n        else {\n            EngagementLogger._logger.logData(engagementData);\n        }\n    };\n    EngagementLogger._checkValidTagName = function (engagementData, isLogEntry) {\n        if (isLogEntry === void 0) { isLogEntry = false; }\n        if (!isLogEntry) {\n            var tagNameRegex = /(\\w+)\\.(\\w+).(\\w+)/ig;\n            if (tagNameRegex.test(engagementData.name) === false) {\n                throw new Error(engagementData.name + \" tagName does not follow AppName.ControlName.ActionName pattern\");\n            }\n        }\n    };\n    EngagementLogger._addContextData = function (data) {\n        if (DiagnosticsSettingsManager.isInitialized) {\n            data.siteId = DiagnosticsSettingsManager.settings.siteId;\n            data.webId = DiagnosticsSettingsManager.settings.webId;\n        }\n    };\n    EngagementLogger._logManager = new LogManager();\n    EngagementLogger._logger = new DefaultEngagementHandler();\n    return EngagementLogger;\n}());\nexport default EngagementLogger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/Engagement/EngagementLogger.js\n// module id = null\n// module chunks = ","var ExecutionQueue = (function () {\n    function ExecutionQueue() {\n        this._shouldExecuteInRealTime = false;\n        this._handlers = {}; \n        this._executionEntries = [];\n    }\n    Object.defineProperty(ExecutionQueue.prototype, \"shouldExecuteInRealTime\", {\n        get: function () {\n            return this._shouldExecuteInRealTime;\n        },\n        set: function (executeInRealTime) {\n            this._shouldExecuteInRealTime = executeInRealTime;\n            if (this._shouldExecuteInRealTime) {\n                this.flush();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExecutionQueue.prototype.addHandler = function (key, handler) {\n        if (this._containsHandler(key, handler)) {\n            return;\n        }\n        this._initializeHandlerArrayForKey(key);\n        var handlers = this._handlers[key]; \n        if (handlers.indexOf(handler) === -1) {\n            handlers.push(handler);\n        }\n    };\n    ExecutionQueue.prototype.addExecutionEntry = function (key) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        Object.freeze(args);\n        if (this._shouldExecuteInRealTime) {\n            this._processExecutionEntry(key, args);\n        }\n        else {\n            this._executionEntries.push({ key: key, args: args });\n        }\n    };\n    ExecutionQueue.prototype.removeHandler = function (key, handler) {\n        var index = this._handlers[key].indexOf(handler);\n        if (index > -1) {\n            this._handlers[key].splice(index, 1);\n        }\n    };\n    ExecutionQueue.prototype.reset = function () {\n        this._handlers = {};\n        this._executionEntries = [];\n    };\n    ExecutionQueue.prototype.flush = function () {\n        this._processAllExecutionEntries();\n        this._executionEntries = [];\n    };\n    ExecutionQueue.prototype._containsHandler = function (key, handler) {\n        if (this._handlers[key] !== null && this._handlers[key] !== undefined) {\n            return this._handlers[key].indexOf(handler) > -1;\n        }\n        return false;\n    };\n    ExecutionQueue.prototype._initializeHandlerArrayForKey = function (key) {\n        if (this._handlers[key] === null || this._handlers[key] === undefined) {\n            this._handlers[key] = [];\n        }\n    };\n    ExecutionQueue.prototype._processAllExecutionEntries = function () {\n        var _this = this;\n        this._executionEntries.forEach(function (entry) {\n            if (entry && _this._handlers[entry.key]) {\n                try {\n                    _this._handlers[entry.key].forEach(function (handler) {\n                        handler.apply(_this, entry.args);\n                    });\n                }\n                catch (e) {\n                    console.error('failed to process execution entry:' + e.toString());\n                }\n            }\n        });\n    };\n    ExecutionQueue.prototype._processExecutionEntry = function (key, args) {\n        for (var i = 0; i < this._handlers[key].length; i++) {\n            try {\n                this._handlers[key][i].apply(this, args);\n            }\n            catch (e) {\n                console.error('failed to process execution entry:' + e.toString());\n            }\n        }\n    };\n    return ExecutionQueue;\n}());\nexport default ExecutionQueue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/ExecutionQueue.js\n// module id = null\n// module chunks = ","import ExecutionQueue from '../ExecutionQueue';\nimport DiagnosticsSettingsManager from '../../DiagnosticsSettingsManager';\nvar QosLogger = (function () {\n    function QosLogger() {\n        this._qosEvents = new Map();\n        this._deferExecutor = new ExecutionQueue();\n        this._shouldProcessInRealTime = false;\n        this.initializeLogger();\n    }\n    Object.defineProperty(QosLogger, \"instance\", {\n        get: function () {\n            if (!this._instance) {\n                this._instance = new QosLogger();\n            }\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QosLogger.prototype, \"shouldProcessInRealTime\", {\n        get: function () {\n            return this._shouldProcessInRealTime;\n        },\n        set: function (processInRealTime) {\n            this._shouldProcessInRealTime = processInRealTime;\n            this._deferExecutor.shouldExecuteInRealTime = processInRealTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QosLogger.prototype.setLogger = function (qosLogger) {\n        this._qosLogger = qosLogger;\n    };\n    QosLogger.prototype.getQosEvent = function (key) {\n        return this._qosEvents.get(key);\n    };\n    QosLogger.prototype.startQosMonitor = function (key, startData) {\n        if (!this._qosEvents.has(key)) {\n            if (DiagnosticsSettingsManager.shouldUseBuffer()) {\n                this._deferExecutor.addExecutionEntry('start', key, startData);\n            }\n            else {\n                this._startMonitor(key, startData);\n            }\n        }\n    };\n    QosLogger.prototype.writeQosEndResult = function (key, endData) {\n        if (DiagnosticsSettingsManager.shouldUseBuffer()) {\n            this._deferExecutor.addExecutionEntry('end', key, endData);\n        }\n        else {\n            this._endMonitor(key, endData);\n        }\n    };\n    QosLogger.prototype._startMonitor = function (key, event) {\n        if (this._qosLogger) {\n            this._qosEvents.set(key, new this._qosLogger(event)); \n        }\n    };\n    QosLogger.prototype._endMonitor = function (key, event) {\n        if (this._qosEvents.has(key)) {\n            this._qosEvents.get(key).end(event); \n            this._qosEvents.delete(key);\n        }\n    };\n    QosLogger.prototype.initializeLogger = function () {\n        var _this = this;\n        var startHandler = function (key, e) { _this._startMonitor(key, e); }; \n        var endHandler = function (key, e) { _this._endMonitor(key, e); }; \n        this._deferExecutor.addHandler('start', startHandler);\n        this._deferExecutor.addHandler('end', endHandler);\n    };\n    return QosLogger;\n}());\nexport default QosLogger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/Qos/QosLogger.js\n// module id = null\n// module chunks = ","import { Text, Guid, Validate } from '@microsoft/sp-core-library';\nimport DiagnosticsSettingsManager from '../../DiagnosticsSettingsManager';\nimport TraceLogger from '../Trace/TraceLogger';\nimport QosLogger from './QosLogger';\nimport EngagementLogger from '../Engagement/EngagementLogger';\nvar QosMonitor = (function () {\n    function QosMonitor(scenarioName, copyToEngagement) {\n        if (copyToEngagement === void 0) { copyToEngagement = false; }\n        this._qosResultTypeValue = (_a = {},\n            _a[0 ] = 'Success',\n            _a[1 ] = 'Failure',\n            _a[2 ] = 'ExpectedFailure',\n            _a);\n        Validate.isNonemptyString(scenarioName, 'scenarioName');\n        this._id = Guid.newGuid().toString();\n        QosLogger.instance.startQosMonitor(this._id, { name: scenarioName });\n        this._scenarioName = scenarioName;\n        this._hasEnded = false;\n        this._copyToEngagement = copyToEngagement;\n        var _a;\n    }\n    QosMonitor.startRealTimeProcessing = function () {\n        if (!QosLogger.instance.shouldProcessInRealTime) {\n            this._shouldProcessInRealTime(true);\n        }\n    };\n    QosMonitor._shouldProcessInRealTime = function (processInRealTime) {\n        QosLogger.instance.shouldProcessInRealTime = processInRealTime;\n    };\n    Object.defineProperty(QosMonitor.prototype, \"name\", {\n        get: function () {\n            return DiagnosticsSettingsManager.shouldUseBuffer() ? this._scenarioName : QosLogger.instance.getQosEvent(this._id).data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QosMonitor.prototype, \"shortEventName\", {\n        get: function () {\n            return DiagnosticsSettingsManager.shouldUseBuffer() ? 'Qos' : QosLogger.instance.getQosEvent(this._id).shortEventName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QosMonitor.prototype, \"resultCode\", {\n        get: function () {\n            return DiagnosticsSettingsManager.shouldUseBuffer() ? this._endResultCode : QosLogger.instance.getQosEvent(this._id).data.resultCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QosMonitor.prototype, \"resultType\", {\n        get: function () {\n            return DiagnosticsSettingsManager.shouldUseBuffer() ? this._endResult : QosLogger.instance.getQosEvent(this._id).data.resultType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QosMonitor.prototype, \"extraData\", {\n        get: function () {\n            return DiagnosticsSettingsManager.shouldUseBuffer() ? this._endExtraData : QosLogger.instance.getQosEvent(this._id).data.extraData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QosMonitor.prototype, \"hasEnded\", {\n        get: function () {\n            return this._hasEnded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QosMonitor.prototype.writeSuccess = function (extraData) {\n        this._writeQosEnd(0 , undefined, undefined, extraData);\n    };\n    QosMonitor.prototype.writeUnexpectedFailure = function (tagNameSuffix, ex, extraData) {\n        if (tagNameSuffix === void 0) { tagNameSuffix = 'DefaultUnexpected'; }\n        this._writeQosEnd(1 , tagNameSuffix, ex, extraData);\n    };\n    QosMonitor.prototype.writeExpectedFailure = function (tagNameSuffix, ex, extraData) {\n        if (tagNameSuffix === void 0) { tagNameSuffix = 'DefaultExpected'; }\n        this._writeQosEnd(2 , tagNameSuffix, ex, extraData);\n    };\n    QosMonitor.prototype._writeQosEnd = function (resultType, tagNameSuffix, ex, extraData) {\n        if (!QosLogger.instance.getQosEvent(this._id) && !DiagnosticsSettingsManager.shouldUseBuffer()) {\n            throw new Error('monitor instance is null or undefined');\n        }\n        if (!this._shouldSkip(resultType)) {\n            this._endResultCode = tagNameSuffix;\n            this._endExtraData = extraData;\n            this._endResult = resultType;\n            var endData = {\n                resultCode: this._endResultCode,\n                resultType: this._endResult,\n                error: ex ? ex.message : undefined,\n                extraData: this._endExtraData\n            };\n            QosLogger.instance.writeQosEndResult(this._id, endData);\n            this._writeToEngagement();\n        }\n    };\n    QosMonitor.prototype._shouldSkip = function (result) {\n        if (this._hasEnded && (this._endResult !== undefined)) {\n            var message = Text.format(QosMonitor.qosMonitorHasEndedErrorString, this.name, this._qosResultTypeValue[this._endResult], this._qosResultTypeValue[result]);\n            if (this._endResult !== result) {\n                TraceLogger.logError(QosMonitor.logSource, new Error(message));\n            }\n            if (DEBUG) {\n                TraceLogger.logVerbose(QosMonitor.logSource, message, 'skipEnd');\n            }\n            return true;\n        }\n        else {\n            this._hasEnded = true;\n            return false;\n        }\n    };\n    QosMonitor.prototype._writeToEngagement = function () {\n        if (this._shouldWriteToEngagement()) {\n            var engagementData = {\n                name: 'Spfx.Qos.ToEngagement',\n                extraData: this.extraData || {}\n            };\n            engagementData.extraData['qosName'] = this.name;\n            if (this.resultType) {\n                engagementData.extraData['qosResultType'] = this._qosResultTypeValue[this.resultType];\n            }\n            if (this.resultCode) {\n                engagementData.extraData['qosResultCode'] = this.resultCode;\n            }\n            EngagementLogger.log(engagementData);\n        }\n    };\n    QosMonitor.prototype._shouldWriteToEngagement = function () {\n        var shouldWriteEngagement = this._copyToEngagement &&\n            (DiagnosticsSettingsManager.shouldUseBuffer() || !!QosLogger.instance.getQosEvent(this._id).data);\n        return shouldWriteEngagement;\n    };\n    QosMonitor.logSource = {\n        id: 'QosMonitor'\n    };\n    QosMonitor.qosMonitorHasEndedErrorString = 'QoS monitor \\'{0}\\' has ended with \\'{1}\\' already. Ignoring \\'{2}\\' tag.';\n    return QosMonitor;\n}());\nexport default QosMonitor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Api/Qos/QosMonitor.js\n// module id = null\n// module chunks = ","export { default as _TraceLogger } from './Api/Trace/TraceLogger';\nexport { default as _LogEntry } from './Api/LogEntry';\nexport { default as _LogFeature } from './Api/LogFeature';\nexport { default as _LogSource, logSourceServiceKey as _logSourceServiceKey } from './Api/LogSource';\nexport { default as _LogType } from './Api/LogType';\nexport { default as _Diagnostics } from './Diagnostics';\nexport { default as _LogEvent } from './Api/Trace/LogEvent';\nexport { LogLevel as _LogLevel } from './Api/LogLevel';\nexport { default as _CircularBuffer } from './Api/LogManager/CircularBuffer';\nexport { default as _LogManager } from './Api/LogManager/LogManager';\nexport { default as _EngagementLogger } from './Api/Engagement/EngagementLogger';\nexport { default as _QosMonitor } from './Api/Qos/QosMonitor';\nexport { default as _QosLogger } from './Api/Qos/QosLogger';\nexport { default as _ExecutionQueue } from './Api/ExecutionQueue';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/index.js\n// module id = null\n// module chunks = ","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@microsoft/sp-lodash-subset\"\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}