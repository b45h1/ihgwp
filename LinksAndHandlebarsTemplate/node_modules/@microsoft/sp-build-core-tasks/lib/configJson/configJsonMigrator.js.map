{"version":3,"sources":["configJson/configJsonMigrator.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAE7B,oEAAwD;AAKxD,MAAM,sBAAsB,GAAW,CAAC,CAAC;AACzC,MAAM,sBAAsB,GAAW,EAAE,CAAC;AAE1C,uCAAuC;AACvC,gCAAuC,UAAqC,EAAE,UAAuB;IACnG,MAAM,iBAAiB,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,kCAAkC,CAAC,CAAC;IAC3F,MAAM,aAAa,GAAgB,4BAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACpE,MAAM,qBAAqB,GAAW,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IACzG,MAAM,eAAe,GAAW,IAAI,MAAM,CAAC,qBAAqB,CAAC,CAAC;IAElE,+DAA+D;IAC/D,MAAM,OAAO,GAA8B,EAAE,CAAC;IAE9C,MAAM,aAAa,GAAa,EAAE,CAAC;IACnC,MAAM,aAAa,GAAa,EAAE,CAAC;IAEnC,wEAAwE;IACxE,GAAG,CAAC,CAAC,MAAM,UAAU,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACtC,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACvD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/B,MAAM,aAAa,GAAW,kBAAkB,CAAC,UAAU,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC3B,qDAAqD;gBACrD,MAAM,IAAI,KAAK,CACb,gBAAgB,UAAU,mCAAmC,aAAa,iCAAiC;oBAC3G,0GAA0G,CAC3G,CAAC;YACJ,CAAC;YAED,OAAO,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAExD,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC;gBAClD,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACpC,CAAC;QACH,CAAC;IACH,CAAC;IAED,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;QACzB,UAAU,CACR,8FAA8F;YAC9F,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAChC,CAAC;IACJ,CAAC;IAED,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;QACzB,UAAU,CACR,+FAA+F;YAC/F,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAChC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,CAAC;AAlDD,wDAkDC;AAED;;;;;;GAMG;AACH,4BAA4B,UAAkB;IAC5C,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;IACtC,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;IAE5F,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,sBAAsB,CAAC,CAAC,CAAC;IAC1E,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;AACH,CAAC","file":"configJsonMigrator.js","sourcesContent":["import * as path from 'path';\r\n\r\nimport { JsonFile } from '@microsoft/node-core-library';\r\nimport { JSONSchema4 } from 'json-schema';\r\n\r\nimport { IConfigJson } from './index';\r\n\r\nconst MIN_BUNDLE_NAME_LENGTH: number = 6;\r\nconst MAX_BUNDLE_NAME_LENGTH: number = 64;\r\n\r\n// tslint:disable-next-line:export-name\r\nexport function migrateToLatestVersion(logWarning: (message: string) => void, configJson: IConfigJson): void {\r\n  const config2SchemaPath: string = path.join(__dirname, './schemas/config.2.0.schema.json');\r\n  const config2Schema: JSONSchema4 = JsonFile.load(config2SchemaPath);\r\n  const bundleNameRegexString: string = Object.keys(config2Schema.properties.bundles.patternProperties)[0];\r\n  const bundleNameRegex: RegExp = new RegExp(bundleNameRegexString);\r\n\r\n  // Create a new bundle object to keep bundles in the same order\r\n  const bundles: typeof configJson.bundles = {};\r\n\r\n  const modifiedNames: string[] = [];\r\n  const tooShortNames: string[] = [];\r\n\r\n  // We need to make sure all bundle names follow the V2 naming convention\r\n  for (const bundleName in configJson.bundles) {\r\n    if (bundleName.match(bundleNameRegex)) {\r\n      bundles[bundleName] = configJson.bundles[bundleName];\r\n    } else {\r\n      modifiedNames.push(bundleName);\r\n      const newBundleName: string = _migrateBundleName(bundleName);\r\n      if (bundles[newBundleName]) {\r\n        // The bundle name already exists - so we should fail\r\n        throw new Error(\r\n          `Bundle name \"${bundleName}\" translates to the same name (\"${newBundleName}\") as another bundle name when ` +\r\n          'the name is migrated to be compatible with the latest version of SPFx. One of the names must be changed.'\r\n        );\r\n      }\r\n\r\n      bundles[newBundleName] = configJson.bundles[bundleName];\r\n\r\n      if (newBundleName.length < MIN_BUNDLE_NAME_LENGTH) {\r\n        tooShortNames.push(newBundleName);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (modifiedNames.length) {\r\n    logWarning(\r\n      'Bundle names have been migrated to follow the V2 config.json schema. Modified bundle names: ' +\r\n      `[${modifiedNames.join(', ')}]`\r\n    );\r\n  }\r\n\r\n  if (tooShortNames.length) {\r\n    logWarning(\r\n      'One or more of your bundle names are too short (less than 6 characters). Please update them: ' +\r\n      `[${tooShortNames.join(', ')}]`\r\n    );\r\n  }\r\n\r\n  configJson.bundles = bundles;\r\n}\r\n\r\n/**\r\n * This algorithm takes a V1-allowed bundle name and modifies it to fit the V2 requirements. It:\r\n *  - Trims non-alphanumeric characters from the beginning and end of the string\r\n *  - Replaces uppercase characters with lowercase characters\r\n *  - Replaces non-alphanumeric characters with dashes (\"-\") except for dashes and periods\r\n *  - Truncates the string to 64 characters\r\n */\r\nfunction _migrateBundleName(bundleName: string): string {\r\n  bundleName = bundleName.toLowerCase();\r\n  bundleName = bundleName.replace(/^[^a-z0-9]+|[^a-z0-9]+$/g, '').replace(/[^a-z0-9.]/g, '-');\r\n\r\n  if (bundleName.length > MAX_BUNDLE_NAME_LENGTH) {\r\n    return _migrateBundleName(bundleName.substr(0, MAX_BUNDLE_NAME_LENGTH));\r\n  } else {\r\n    return bundleName;\r\n  }\r\n}\r\n"],"sourceRoot":"../../../src"}