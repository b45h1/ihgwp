"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
// <reference types='mocha' />
const chai_1 = require("chai");
const ProjectTask_1 = require("../ProjectTask");
describe('convertSlashesForWindows()', () => {
    it('converted inputs', () => {
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('./node_modules/.bin/tslint -c config/tslint.json'), '.\\node_modules\\.bin\\tslint -c config/tslint.json');
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('/blah/bleep&&/bloop'), '\\blah\\bleep&&/bloop');
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('/blah/bleep'), '\\blah\\bleep');
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('/blah/bleep --path a/b'), '\\blah\\bleep --path a/b');
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('/blah/bleep>output.log'), '\\blah\\bleep>output.log');
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('/blah/bleep<input.json'), '\\blah\\bleep<input.json');
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('/blah/bleep|/blah/bloop'), '\\blah\\bleep|/blah/bloop');
    });
    it('ignored inputs', () => {
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('/blah\\bleep && /bloop'), '/blah\\bleep && /bloop');
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('cmd.exe /c blah'), 'cmd.exe /c blah');
        chai_1.assert.equal(ProjectTask_1.convertSlashesForWindows('"/blah/bleep"'), '"/blah/bleep"');
    });
});

//# sourceMappingURL=ProjectTask.test.js.map
