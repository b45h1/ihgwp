{"version":3,"sources":["cli/taskRunner/test/ProjectTask.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,8BAA8B;AAC9B,+BAA8B;AAE9B,gDAA0D;AAE1D,QAAQ,CAAC,4BAA4B,EAAE;IACrC,EAAE,CAAC,kBAAkB,EAAE;QACrB,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,kDAAkD,CAAC,EACvF,qDAAqD,CAAC,CAAC;QACzD,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,qBAAqB,CAAC,EAAE,uBAAuB,CAAC,CAAC;QACvF,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,aAAa,CAAC,EAAE,eAAe,CAAC,CAAC;QACvE,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,wBAAwB,CAAC,EAAE,0BAA0B,CAAC,CAAC;QAC7F,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,wBAAwB,CAAC,EAAE,0BAA0B,CAAC,CAAC;QAC7F,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,wBAAwB,CAAC,EAAE,0BAA0B,CAAC,CAAC;QAC7F,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,yBAAyB,CAAC,EAAE,2BAA2B,CAAC,CAAC;IACjG,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,gBAAgB,EAAE;QACnB,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,wBAAwB,CAAC,EAAE,wBAAwB,CAAC,CAAC;QAC3F,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAC7E,aAAM,CAAC,KAAK,CAAC,sCAAwB,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"ProjectTask.test.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n// <reference types='mocha' />\r\nimport { assert } from 'chai';\r\n\r\nimport { convertSlashesForWindows } from '../ProjectTask';\r\n\r\ndescribe('convertSlashesForWindows()', () => {\r\n  it('converted inputs', () => {\r\n    assert.equal(convertSlashesForWindows('./node_modules/.bin/tslint -c config/tslint.json'),\r\n      '.\\\\node_modules\\\\.bin\\\\tslint -c config/tslint.json');\r\n    assert.equal(convertSlashesForWindows('/blah/bleep&&/bloop'), '\\\\blah\\\\bleep&&/bloop');\r\n    assert.equal(convertSlashesForWindows('/blah/bleep'), '\\\\blah\\\\bleep');\r\n    assert.equal(convertSlashesForWindows('/blah/bleep --path a/b'), '\\\\blah\\\\bleep --path a/b');\r\n    assert.equal(convertSlashesForWindows('/blah/bleep>output.log'), '\\\\blah\\\\bleep>output.log');\r\n    assert.equal(convertSlashesForWindows('/blah/bleep<input.json'), '\\\\blah\\\\bleep<input.json');\r\n    assert.equal(convertSlashesForWindows('/blah/bleep|/blah/bloop'), '\\\\blah\\\\bleep|/blah/bloop');\r\n  });\r\n  it('ignored inputs', () => {\r\n    assert.equal(convertSlashesForWindows('/blah\\\\bleep && /bloop'), '/blah\\\\bleep && /bloop');\r\n    assert.equal(convertSlashesForWindows('cmd.exe /c blah'), 'cmd.exe /c blah');\r\n    assert.equal(convertSlashesForWindows('\"/blah/bleep\"'), '\"/blah/bleep\"');\r\n  });\r\n});\r\n"],"sourceRoot":"../../../../../../../src"}