{"version":3,"sources":["cli/actions/GenerateAction.ts"],"names":[],"mappings":"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","file":"GenerateAction.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as colors from 'colors';\r\nimport * as os from 'os';\r\nimport * as path from 'path';\r\nimport * as fsx from 'fs-extra';\r\nimport { CommandLineFlagParameter } from '@microsoft/ts-command-line';\r\n\r\nimport { PackageManager } from '../../data/RushConfiguration';\r\nimport Utilities from '../../utilities/Utilities';\r\nimport { Stopwatch } from '../../utilities/Stopwatch';\r\nimport InstallManager, { InstallType } from '../logic/InstallManager';\r\nimport { LinkManagerFactory } from '../logic/LinkManagerFactory';\r\nimport { BaseLinkManager } from '../logic/base/BaseLinkManager';\r\nimport RushCommandLineParser from './RushCommandLineParser';\r\nimport { ApprovedPackagesChecker } from '../logic/ApprovedPackagesChecker';\r\nimport { BaseShrinkwrapFile } from '../logic/base/BaseShrinkwrapFile';\r\nimport { ShrinkwrapFileFactory } from '../logic/ShrinkwrapFileFactory';\r\nimport { BaseRushAction } from './BaseRushAction';\r\n\r\nexport default class GenerateAction extends BaseRushAction {\r\n  private _lazyParameter: CommandLineFlagParameter;\r\n  private _noLinkParameter: CommandLineFlagParameter;\r\n  private _forceParameter: CommandLineFlagParameter;\r\n  private _cleanParameter: CommandLineFlagParameter;\r\n  private _conservativeParameter: CommandLineFlagParameter;\r\n\r\n  constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionName: 'generate',\r\n      summary: 'Generate a new shrinkwrap file containing the latest semver-compatible versions.',\r\n      documentation: 'Run the \"rush generate\" command only if: (1) you are setting up a new repo, or'\r\n      + ' (2) you want to upgrade to the latest versions of your dependencies, or (3)'\r\n      + ' you modified a package.json file and \"rush install\" can\\'t find what it needs.'\r\n      + ' The \"rush generate\" command will do a clean install of your Rush \"common\" folder,'\r\n      + ' upgrading you to the latest semver-compatible versions of all dependencies.'\r\n      + ' Then, it will create a new shrinkwrap file, which you should commit to source control.'\r\n      + ' Afterwards, it will run \"rush link\" to create symlinks for all your projects.',\r\n      parser\r\n    });\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    this._lazyParameter = this.defineFlagParameter({\r\n      parameterLongName: '--lazy',\r\n      parameterShortName: '-l',\r\n      description: 'Use this to save time in situations where you need to run \"rush generate\" repeatedly'\r\n      + ' while editing package.json files.  It performs a much quicker incremental install,'\r\n      + ' but does not generate a shrinkwrap file; you will still need to run a full \"rush generate\"'\r\n      + ' (without --lazy) before committing your changes.'\r\n    });\r\n    this._forceParameter = this.defineFlagParameter({\r\n      parameterLongName: '--force',\r\n      parameterShortName: '-f',\r\n      description: 'Use this to bypass checking the shrinkwrap file, which forces rush generate to run even if all'\r\n      + ' dependencies already exist in the shrinkwrap file. Only applies when package manager is npm.'\r\n    });\r\n    this._noLinkParameter = this.defineFlagParameter({\r\n      parameterLongName: '--no-link',\r\n      description: 'Do not automatically run the \"rush link\" action after \"rush generate\"'\r\n    });\r\n    this._cleanParameter = this.defineFlagParameter({\r\n      parameterLongName: '--clean',\r\n      parameterShortName: '-c',\r\n      description: 'When using pnpm, forces a non-incremental clean install which clears the node_module and pnpm'\r\n        + ' store. Use this if any store corruption has occurred.'\r\n    });\r\n    this._conservativeParameter = this.defineFlagParameter({\r\n      parameterLongName: '--conservative',\r\n      description: 'When using pnpm, this only bumps the minimal set of versions necessary to satisfy'\r\n      + ' package.json requirements, avoiding a full upgrade of unrelated shrinkwrap dependencies.'\r\n    });\r\n  }\r\n\r\n  protected run(): Promise<void> {\r\n    const stopwatch: Stopwatch = Stopwatch.start();\r\n    const isLazy: boolean = this._lazyParameter.value;\r\n\r\n    if (this._cleanParameter.value && this._lazyParameter.value) {\r\n      throw new Error(`Cannot specify both --clean and --lazy, as these are mutually exclusive operations.`);\r\n    }\r\n\r\n    if (this._lazyParameter.value && this.rushConfiguration.packageManager === 'pnpm') {\r\n      console.warn(colors.yellow('The --lazy flag is not required for pnpm'\r\n        + ' because its algorithm inherently incorporates this optimization.'));\r\n    }\r\n\r\n    if (this._cleanParameter.value && this.rushConfiguration.packageManager === 'npm') {\r\n      console.warn(colors.yellow('The --clean flag is not required for npm'\r\n        + ' because its algorithm always performs a clean installation.'));\r\n    }\r\n\r\n    if (this._conservativeParameter.value && this.rushConfiguration.packageManager !== 'pnpm') {\r\n      throw new Error(`The --conservative flag is only supported for pnpm.`);\r\n    }\r\n\r\n    ApprovedPackagesChecker.rewriteConfigFiles(this.rushConfiguration);\r\n\r\n    const installManager: InstallManager = new InstallManager(this.rushConfiguration);\r\n\r\n    const committedShrinkwrapFilename: string = this.rushConfiguration.committedShrinkwrapFilename;\r\n    const tempShrinkwrapFilename: string = this.rushConfiguration.tempShrinkwrapFilename;\r\n\r\n    try {\r\n      const shrinkwrapFile: BaseShrinkwrapFile | undefined = ShrinkwrapFileFactory.getShrinkwrapFile(\r\n        this.rushConfiguration.packageManager,\r\n        this.rushConfiguration.committedShrinkwrapFilename);\r\n\r\n      if (shrinkwrapFile\r\n        && !this._forceParameter.value\r\n        && installManager.createTempModulesAndCheckShrinkwrap(shrinkwrapFile, false)) {\r\n        console.log();\r\n        console.log(colors.yellow('Skipping generate, since all project dependencies are already satisfied.'));\r\n        console.log();\r\n        console.log(`If you want to force an upgrade to the latest compatible versions, use ` +\r\n          `${colors.yellow('rush generate --force')}. Otherwise, just run ${colors.green('rush install')}.)`);\r\n        return Promise.resolve();\r\n      }\r\n    } catch (ex) {\r\n      console.log();\r\n      console.log('There was a problem reading the shrinkwrap file. Proceeding with \"rush generate\".');\r\n    }\r\n\r\n    return installManager.ensureLocalPackageManager(false).then(() => {\r\n      installManager.createTempModules(true);\r\n\r\n      if (this._conservativeParameter.value) {\r\n        if (fsx.existsSync(committedShrinkwrapFilename)) {\r\n          console.log(os.EOL + 'The \"--conservative\" flag was provided, so preserving '\r\n            + committedShrinkwrapFilename);\r\n        } else {\r\n          throw new Error('The \"--conservative\" flag cannot be used because the shrinkwrap file is missing: '\r\n            + committedShrinkwrapFilename);\r\n        }\r\n\r\n        // Copy common\\config\\rush\\shrinkwrap.yaml --> common\\temp\\shrinkwrap.yaml\r\n        console.log(os.EOL + 'Updating ' + tempShrinkwrapFilename);\r\n        fsx.copySync(committedShrinkwrapFilename, tempShrinkwrapFilename);\r\n      } else {\r\n        if (fsx.existsSync(tempShrinkwrapFilename)) {\r\n          console.log(os.EOL + 'Deleting ' + tempShrinkwrapFilename);\r\n          fsx.unlinkSync(tempShrinkwrapFilename);\r\n        }\r\n      }\r\n\r\n      const packageManager: PackageManager = this.rushConfiguration.packageManager;\r\n\r\n      if (this.rushConfiguration.packageManager === 'pnpm') {\r\n\r\n        // Do an incremental install unless --clean is specified\r\n        installManager.installCommonModules(this._cleanParameter.value\r\n          ? InstallType.ForceClean\r\n          : InstallType.Normal);\r\n\r\n        this._syncShrinkwrapAndCheckInstallFlag(installManager);\r\n\r\n      } else if (this.rushConfiguration.packageManager === 'npm') {\r\n\r\n        if (isLazy) {\r\n          console.log(colors.green(\r\n            `${os.EOL}Rush is running in \"--lazy\" mode. ` +\r\n            `You will need to run a normal \"rush generate\" before committing.`));\r\n\r\n          // Do an incremental install\r\n          installManager.installCommonModules(InstallType.Normal);\r\n\r\n          console.log(os.EOL + colors.bold('(Skipping \"npm shrinkwrap\")') + os.EOL);\r\n\r\n          // delete the automatically created npm5 \"package.lock\" file\r\n          const packageLogFilePath: string = path.join(this.rushConfiguration.commonTempFolder, 'package.lock');\r\n          if (fsx.existsSync(packageLogFilePath)) {\r\n            console.log('Removing NPM 5\\'s \"package.lock\" file');\r\n            fsx.removeSync(packageLogFilePath);\r\n          }\r\n        } else {\r\n          // Do a clean install\r\n          installManager.installCommonModules(InstallType.ForceClean);\r\n\r\n          console.log(os.EOL + colors.bold('Running \"npm shrinkwrap\"...'));\r\n          const npmArgs: string[] = ['shrinkwrap'];\r\n          installManager.pushConfigurationArgs(npmArgs);\r\n          Utilities.executeCommand(this.rushConfiguration.packageManagerToolFilename,\r\n            npmArgs, this.rushConfiguration.commonTempFolder);\r\n          console.log('\"npm shrinkwrap\" completed' + os.EOL);\r\n\r\n          this._syncShrinkwrapAndCheckInstallFlag(installManager);\r\n        }\r\n\r\n      } else {\r\n        // program bug\r\n        throw new Error(`Program bug: invalid package manager \"${packageManager}\"`);\r\n      }\r\n\r\n      stopwatch.stop();\r\n      console.log(os.EOL + colors.green(`Rush generate finished successfully. (${stopwatch.toString()})`));\r\n\r\n      if (!this._noLinkParameter.value) {\r\n        const linkManager: BaseLinkManager =\r\n          LinkManagerFactory.getLinkManager(this.rushConfiguration);\r\n        // NOTE: Setting force=true here shouldn't be strictly necessary, since installCommonModules()\r\n        // above should have already deleted the marker file, but it doesn't hurt to be explicit.\r\n        return linkManager.createSymlinksForProjects(true);\r\n      } else {\r\n        console.log(os.EOL + 'Next you should probably run: \"rush link\"');\r\n      }\r\n    });\r\n  }\r\n\r\n  private _syncShrinkwrapAndCheckInstallFlag(installManager: InstallManager): void {\r\n    // Copy (or delete) common\\temp\\shrinkwrap.yaml --> common\\config\\rush\\shrinkwrap.yaml\r\n    installManager.syncFile(this.rushConfiguration.tempShrinkwrapFilename,\r\n      this.rushConfiguration.committedShrinkwrapFilename);\r\n\r\n    // The flag file is normally created by installCommonModules(), but \"rush install\" will\r\n    // compare its timestamp against the shrinkwrap file.  Since we just generated a new\r\n    // npm-shrinkwrap file, it's safe to bump the timestamp, which ensures that \"rush install\"\r\n    // won't do anything immediately after \"rush generate\".  This is a minor performance\r\n    // optimization, but it helps people to understand the semantics of the commands.\r\n    if (installManager.commonNodeModulesMarker.isValid()) {\r\n      installManager.commonNodeModulesMarker.create();\r\n    } else {\r\n      // Sanity check -- since we requested a clean install above, this should never occur\r\n      throw new Error('The install flag file is missing');\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"../../../../../src"}