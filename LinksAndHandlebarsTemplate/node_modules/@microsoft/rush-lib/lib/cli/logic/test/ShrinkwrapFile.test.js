"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const path = require("path");
const ShrinkwrapFileFactory_1 = require("../ShrinkwrapFileFactory");
const PnpmShrinkwrapFile_1 = require("../pnpm/PnpmShrinkwrapFile");
describe('npm ShrinkwrapFile', () => {
    const filename = path.resolve(path.join(__dirname, './shrinkwrapFile/npm-shrinkwrap.json'));
    const shrinkwrapFile = ShrinkwrapFileFactory_1.ShrinkwrapFileFactory.getShrinkwrapFile('npm', filename);
    it('verifies root-level dependency', () => {
        chai_1.assert.isTrue(shrinkwrapFile.hasCompatibleTopLevelDependency('q', '~1.5.0'));
    });
    it('verifies temp project dependencies', () => {
        // Found locally
        chai_1.assert.isTrue(shrinkwrapFile.tryEnsureCompatibleDependency('jquery', '>=2.2.4 <3.0.0', '@rush-temp/project2'));
        // Found at root
        chai_1.assert.isTrue(shrinkwrapFile.tryEnsureCompatibleDependency('q', '~1.5.0', '@rush-temp/project2'));
    });
    it('extracts temp projects successfully', () => {
        const tempProjectNames = shrinkwrapFile.getTempProjectNames();
        chai_1.assert.deepEqual(tempProjectNames, ['@rush-temp/project1', '@rush-temp/project2']);
    });
});
describe('pnpm ShrinkwrapFile', () => {
    const filename = path.resolve(path.join(__dirname, '../../../../src/cli/logic/test/shrinkwrapFile/shrinkwrap.yaml'));
    const shrinkwrapFile = ShrinkwrapFileFactory_1.ShrinkwrapFileFactory.getShrinkwrapFile('pnpm', filename);
    it('verifies root-level dependency', () => {
        chai_1.assert.isFalse(shrinkwrapFile.hasCompatibleTopLevelDependency('q', '~1.5.0'));
    });
    it('verifies temp project dependencies', () => {
        chai_1.assert.isTrue(shrinkwrapFile.tryEnsureCompatibleDependency('jquery', '>=2.0.0 <3.0.0', '@rush-temp/project1'));
        chai_1.assert.isTrue(shrinkwrapFile.tryEnsureCompatibleDependency('q', '~1.5.0', '@rush-temp/project2'));
        chai_1.assert.isFalse(shrinkwrapFile.tryEnsureCompatibleDependency('left-pad', '~9.9.9', '@rush-temp/project1'));
        chai_1.assert.isTrue(shrinkwrapFile.tryEnsureCompatibleDependency('@scope/testDep', '>=1.0.0 <2.0.0', '@rush-temp/project3'));
    });
    it('extracts temp projects successfully', () => {
        const tempProjectNames = shrinkwrapFile.getTempProjectNames();
        chai_1.assert.deepEqual(tempProjectNames, ['@rush-temp/project1', '@rush-temp/project2', '@rush-temp/project3']);
    });
    it('can reuse the latest version that another temp package is providing', () => {
        chai_1.assert.isTrue(shrinkwrapFile.tryEnsureCompatibleDependency('jquery', '>=2.0.0 <3.0.0', '@rush-temp/project3'));
    });
});
describe('extractVersionFromPnpmVersionSpecifier', () => {
    it('extracts a simple version with no slashes', () => {
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('0.0.5'), '0.0.5');
    });
    it('extracts an unscoped peer dep', () => {
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('/gulp-karma/0.0.5/karma@0.13.22'), '0.0.5');
    });
    it('extracts a scoped peer dep', () => {
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('/@ms/sp-client-utilities/3.1.1/foo@13.1.0'), '3.1.1');
    });
    it('extracts relative versions', () => {
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('example.pkgs.visualstudio.com/@scope/testDep/1.0.0'), '1.0.0');
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('example.pkgs.visualstudio.com/@scope/testDep/1.2.3-beta.3'), '1.2.3-beta.3');
    });
    it('handles bad cases', () => {
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('/foo/gulp-karma/0.0.5/karma@0.13.22'), undefined);
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('/@ms/3.1.1/foo@13.1.0'), undefined);
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier(''), undefined);
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('/'), undefined);
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('//'), undefined);
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('/@/'), undefined);
        chai_1.assert.equal(PnpmShrinkwrapFile_1.extractVersionFromPnpmVersionSpecifier('example.pkgs.visualstudio.com/@scope/testDep/'), undefined);
    });
});

//# sourceMappingURL=ShrinkwrapFile.test.js.map
