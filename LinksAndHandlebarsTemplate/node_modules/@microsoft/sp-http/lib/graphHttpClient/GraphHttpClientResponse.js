import * as tslib_1 from "tslib";
import { sealed, override } from '@microsoft/decorators';
import { Guid } from '@microsoft/sp-core-library';
import HttpClientResponse from '../httpClient/HttpClientResponse';
var GraphHttpClientResponse = (function (_super) {
    tslib_1.__extends(GraphHttpClientResponse, _super);
    function GraphHttpClientResponse(response) {
        return _super.call(this, response) || this;
    }
    GraphHttpClientResponse_1 = GraphHttpClientResponse;
    GraphHttpClientResponse.prototype.clone = function () {
        return new GraphHttpClientResponse_1(this.nativeResponse.clone());
    };
    Object.defineProperty(GraphHttpClientResponse.prototype, "correlationId", {
        get: function () {
            if (!this._correlationId) {
                this._correlationId = Guid.tryParse(this.headers.get('request-id'));
            }
            return this._correlationId;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        override
    ], GraphHttpClientResponse.prototype, "clone", null);
    GraphHttpClientResponse = GraphHttpClientResponse_1 = tslib_1.__decorate([
        sealed
    ], GraphHttpClientResponse);
    return GraphHttpClientResponse;
    var GraphHttpClientResponse_1;
}(HttpClientResponse));
export default GraphHttpClientResponse;
