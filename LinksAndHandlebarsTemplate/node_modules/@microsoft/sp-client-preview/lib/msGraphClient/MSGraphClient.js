import '@microsoft/microsoft-graph-client/lib/graph-js-sdk-web';
import { ServiceKey, Validate } from '@microsoft/sp-core-library';
import { clone } from '@microsoft/sp-lodash-subset';
import { _QosMonitor } from '@ms/sp-telemetry';
import { _AadTokenProviders } from '@microsoft/sp-http';
import { _GraphHttpClientContext as GraphHttpClientContext } from '@microsoft/sp-http';
var MSGraphClient = (function () {
    function MSGraphClient(serviceScope) {
        var _this = this;
        serviceScope.whenFinished(function () {
            if (!MSGraphClient._instance) {
                _this._configureGraphSDK(_AadTokenProviders.getConfigurable(), serviceScope.consume(GraphHttpClientContext.serviceKey));
            }
        });
    }
    MSGraphClient._getGraphBaseUrl = function (graphHttpClientContext) {
        return graphHttpClientContext.getGraphEndpointUrl();
    };
    MSGraphClient.prototype.api = function (path, config) {
        if (!MSGraphClient._instance) {
            throw new Error('This instance of the MSGraphClient has not been initialized.');
        }
        Validate.isNonemptyString(path, 'path');
        MSGraphClient._instance.config = clone(this._originalConfig);
        if (config) {
            for (var key in config) {
                if (config[key]) {
                    MSGraphClient._instance.config[key] = config[key];
                }
            }
        }
        return MSGraphClient._instance.api(path);
    };
    MSGraphClient.prototype._configureGraphSDK = function (tokenProvider, graphHttpClientContext) {
        var _this = this;
        if (!window.MicrosoftGraph.Client) {
            throw new Error('MSGraphClient cannot be constructed due to an unknown failure');
        }
        var graphClientModule = window.MicrosoftGraph.Client;
        window.MicrosoftGraph = undefined;
        this._graphBaseUrl = MSGraphClient._getGraphBaseUrl(graphHttpClientContext);
        MSGraphClient._instance = graphClientModule.init({
            authProvider: function (done) {
                _this._getOAuthToken(tokenProvider).then(function (token) {
                    done(undefined , token);
                }).catch(function (e) {
                    done(e, '');
                });
            },
            baseUrl: this._graphBaseUrl
        });
        this._originalConfig = MSGraphClient._instance.config;
    };
    MSGraphClient.prototype._getOAuthToken = function (tokenProvider) {
        var qosMonitor = new _QosMonitor('MSGraphClient.FetchGraphToken');
        return tokenProvider.getToken(this._graphBaseUrl).then(function (response) {
            qosMonitor.writeSuccess();
            return response;
        }).catch(function (error) {
            qosMonitor.writeUnexpectedFailure('FetchGraphToken', error);
            throw error;
        });
    };
    MSGraphClient.serviceKey = ServiceKey.create('sp-http:MSGraphClient', MSGraphClient);
    return MSGraphClient;
}());
export default MSGraphClient;
