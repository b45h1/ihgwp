import * as tslib_1 from "tslib";
import { virtual } from '@microsoft/decorators';
import { _SPKillSwitch, Guid } from '@microsoft/sp-core-library';
import SuiteNavLinkIds from './models/SuiteNavLinkIds';
var SUITE_NAV_USE_SPO_BEHAVIOR_KILL_SWITCH = Guid.parse('22F8084E-9DEB-4642-B63E-E70A7F87C998');
var SuiteNavManagerConfiguration = (function () {
    function SuiteNavManagerConfiguration(suiteNavConfig) {
        this._currentUICultureName = suiteNavConfig.currentUICultureName;
        this._settingsLinks = suiteNavConfig.settingsData;
        this._signoutUrl = suiteNavConfig.signoutUrl;
        this._siteClientTag = suiteNavConfig.siteClientTag;
        this._systemUserKey = suiteNavConfig.systemUserKey;
        this._webServerRelativeUrl = suiteNavConfig.webServerRelativeUrl;
        this._isSuiteNavDisabled = suiteNavConfig.disableSuiteNav ? true : false;
        this._o365ShellRenderSettings = {
            disableDelayLoad: false,
            disableShellPlus: false,
            layout: 'Mouse',
            top: undefined 
        };
        this._hamburgerMenuCallback = undefined;
        this._suiteNavPostRenderCallback = undefined;
        this._webTemplateId = suiteNavConfig.webTemplateId;
    }
    SuiteNavManagerConfiguration.prototype.isSuiteNavDisabled = function () {
        return this._isSuiteNavDisabled;
    };
    SuiteNavManagerConfiguration.prototype.disableSuiteNav = function () {
        this._isSuiteNavDisabled = true;
    };
    SuiteNavManagerConfiguration.prototype.modifySuiteNavData = function (suiteNavModel) {
        var suiteNavData = suiteNavModel.NavBarData;
        if (!_SPKillSwitch.isActivated(Guid.parse('5bafa34c-ba7d-4de4-97e8-1cdfb4ce051e'), '3/2/2018', 'Add SharePoint text in SuiteNav Banner')) {
            suiteNavData.CurrentMainLinkElementID = SuiteNavLinkIds.SITES;
        }
        suiteNavData.CurrentWorkloadSettingsSubLinks =
            this._settingsLinks && this._settingsLinks.length > 0 ? this._settingsLinks : undefined;
        suiteNavData.FeedbackLink = undefined;
        if (suiteNavData.SignOutLink && this._signoutUrl) {
            suiteNavData.SignOutLink.Url = this._signoutUrl;
        }
        if (suiteNavData.HelpLink) {
            suiteNavData.HelpLink.Url = 'https://go.microsoft.com/fwlink/p/?linkid=827181';
        }
        if (!_SPKillSwitch.isActivated(SUITE_NAV_USE_SPO_BEHAVIOR_KILL_SWITCH, '9/08/2017', 'SuiteNavUseSPOBehaviors')) {
            var webTemplate = this._webTemplateId;
            var isMySite = webTemplate === "21"  || webTemplate === "54" ;
            suiteNavData.UseSPOBehaviors = !isMySite;
        }
        return suiteNavData;
    };
    SuiteNavManagerConfiguration.prototype.getActionsMap = function () {
        return {};
    };
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "systemUserKey", {
        get: function () {
            return this._systemUserKey || '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "cacheToken", {
        get: function () {
            var clientTag = this._siteClientTag;
            if (clientTag !== undefined) {
                return clientTag.substring(0, clientTag.indexOf('$$'));
            }
            return '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "o365ShellRenderSettings", {
        get: function () {
            return this._o365ShellRenderSettings;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "currentUICultureName", {
        get: function () {
            return this._currentUICultureName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "webServerRelativeUrl", {
        get: function () {
            return this._webServerRelativeUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "hamburgerCallback", {
        get: function () {
            return this._hamburgerMenuCallback;
        },
        set: function (hamburgerCallback) {
            this._hamburgerMenuCallback = hamburgerCallback;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "suiteNavPostRenderCallback", {
        get: function () {
            return this._suiteNavPostRenderCallback;
        },
        set: function (suiteNavPostRenderCallback) {
            this._suiteNavPostRenderCallback = suiteNavPostRenderCallback;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        virtual
    ], SuiteNavManagerConfiguration.prototype, "getActionsMap", null);
    return SuiteNavManagerConfiguration;
}());
export default SuiteNavManagerConfiguration;
