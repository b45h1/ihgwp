{"version":3,"sources":["components/LinkPickerPanel/LinkPickerPanel.tsx"],"names":[],"mappings":"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","file":"components/LinkPickerPanel/LinkPickerPanel.js","sourcesContent":["import * as React from 'react';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\nimport { Nav } from 'office-ui-fabric-react/lib/Nav';\nimport { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\n\nimport { ILinkPickerPanel, ILinkPickerChoice } from './ILinkPickerPanel';\nimport { ILinkPickerPanelProps, LinkType } from './ILinkPickerPanelProps';\nimport { ILinkPickerPanelState, NavState } from './ILinkPickerPanelState';\n\nimport styles from './LinkPickerPanel.module.scss';\nimport { strings } from '../loc/en-us';\n//import pnp from 'sp-pnp-js';\n\nexport default class LinkPickerPanel\n  extends React.Component<ILinkPickerPanelProps, ILinkPickerPanelState>\n  implements ILinkPickerPanel {\n\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      navState: NavState.site,\n      isUrlValid: false,\n      url: \"\"\n    };\n  }\n\n  public render(): JSX.Element {\n\n    // Figure out which UI to show based on the navigation state\n    const showDocPickerIFrame =\n      this.state.navState == NavState.site;\n    const showLinkEntryForm =\n      this.state.navState == NavState.link;\n    \n    return (\n\n      <Panel isOpen={this.state.isOpen}\n              onDismissed={this.removeMessageListener.bind(this)}\n              className={styles[\"link-picker\"]}\n              hasCloseButton={false}\n              type={ PanelType.extraLarge }\n              isLightDismiss={true}\n              onDismiss={this.onCancelButtonClick.bind(this)}>\n\n          {/* Navigation on left of panel */}\n          <Nav initialSelectedKey=\"site\" isOnTop={true}\n                groups={[{\n                links:[\n                  {\n                    name: strings.LinkPickerSiteNav, \n                    icon:\"Globe\", key:\"site\", url:\"#\", \n                    onClick:this.onSiteNavClick.bind(this),\n                    isExpanded: showDocPickerIFrame\n                  },\n                  {\n                    name: strings.LinkPickerLinkNav,\n                    icon:\"Link\", key:\"link\", url:\"#\",\n                    onClick:this.onLinkNavClick.bind(this),\n                    isExpanded: showLinkEntryForm\n                  }\n                ]\n                }]}/>\n\n          {/* Doc picker iFrame or link entry form */}\n          <div className={styles[\"tabs\"]}>\n\n              <div hidden={!showDocPickerIFrame}>\n                <iframe src={this.getDocPickerUrl()} role=\"application\" title={strings.LinkPickerSelectFromSiteTitle}/>\n              </div>\n\n              <div hidden={!showLinkEntryForm} className={styles[\"link-insert\"]}>\n                <h2>{strings.LinkPickerSelectFromLinkLabel}</h2>\n                <label htmlFor=\"linkUrl\">{strings.LinkPickerSelectFromLinkDescription}</label><br/>\n                <textarea id=\"linkUrl\" aria-label={strings.LinkPickerSelectFromLinkDescription} onChange={this.onLinkTextChange.bind(this)} defaultValue={this.state.url}/>\n                <div className={styles[\"buttons\"]}>\n                  <PrimaryButton disabled={!this.state.isUrlValid} onClick={this.onOkButtonClick.bind(this)}>{strings.LinkPickerSelectButtonText}</PrimaryButton>\n                  <DefaultButton onClick={this.onCancelButtonClick.bind(this)}>{strings.LinkPickerCancelButtonText}</DefaultButton>\n                {/* <button disabled={!this.state.isUrlValid} onClick={this.onOkButtonClick.bind(this)} label={strings.LinkPickerSelectButtonText}/>\n                <button onClick={this.onCancelButtonClick.bind(this)} label={strings.LinkPickerCancelButtonText}/> */}\n                </div>\n              </div>\n          </div>\n      </Panel>\n      );\n  }\n  \n  // ** Open and Close Panel **\n\n  // Promise methods for returning link to caller\n  private resolvePickLink: (value?: ILinkPickerChoice | Thenable<ILinkPickerChoice>) => void;\n  private rejectPickLink: () => void;\n\n  // Public method to pick a link\n  public pickLink (): Promise<ILinkPickerChoice> {\n      this.openLinkPanel();\n      return new Promise<ILinkPickerChoice>(\n          (resolve, reject) => {\n              this.resolvePickLink = resolve;\n              this.rejectPickLink = reject;\n      });\n  }\n\n  private openLinkPanel() {\n      this.addMessageListener();\n      this.setState({\n          isOpen: true, \n          navState: NavState.site,\n          isUrlValid: false,\n          url: \"\"  \n      });\n  }\n\n  private closeLinkPanel() {\n      this.removeMessageListener();\n      this.setState({\n        isOpen: false,\n      });\n  }\n\n  // ** Functions to manage the document selection iFrame **\n\n  private addMessageListener(){\n    addEventListener('message',this.onMessageReceived.bind(this), false);\n  }\n\n  private removeMessageListener (){\n    removeEventListener('message',this.onMessageReceived.bind(this),false);\n  }\n\n  private onMessageReceived(event: React.CompositionEvent<HTMLIFrameElement>){\n    if (event.data.indexOf('[OneDrive-FromPicker]',0)===0) {\n      const json = JSON.parse(event.data.replace('[OneDrive-FromPicker]',''));\n      const eventType = json.type;\n\n      switch (eventType) {\n        case 'success':\n          const name: string = json.items[0].name;\n          const url: string = json.items[0].sharePoint.url;\n          this.resolvePickLink({name: name, url: url});\n          this.closeLinkPanel();\n          break;\n        case 'cancel':\n          this.rejectPickLink();\n          this.closeLinkPanel();\n          break;\n      }\n    }\n  }\n\n  private getDocPickerUrl(){\n    const anchor = document.createElement('a');\n    anchor.href = this.props.webAbsUrl;\n\n    let typeFilter = '&view=2&p=2';\n    if(this.props.linkType != LinkType.all){\n      typeFilter += '&typeFilters=';\n      if (this.props.linkType & LinkType.folder) typeFilter += 'folder,';\n      if (this.props.linkType & LinkType.doc)    typeFilter += '.doc,.docx,.docm,.xls,.xlsx,.xlsm,.pot,.potx,.ppt,.pptx,.pptm,.vsdx,.vsdm,.vsd,.pdf,';\n      if (this.props.linkType & LinkType.image)  typeFilter += '.gif,.jpg,.jpeg,.bmp,.dib,.tif,.tiff,.ico,.png,.jxr,';\n      if (this.props.linkType & LinkType.page)   typeFilter += '.aspx,';\n      if (this.props.linkType & LinkType.developer) typeFilter += '.html,.css,.handlebars,.js,.json,.ts,.tsx,.jsx,.less,.scss,.sass';\n      typeFilter = typeFilter.slice (0,-1);   // Trim trailing comma\n    }\n    typeFilter += '&picker={\"sn\":false,\"v\":\"files\",\"id\":\"1\",\"o\":\"';\n\n    return anchor.href +\n            \"/_layouts/15/onedrive.aspx?id=\" +\n            (anchor.pathname.substring(0,1)==='/' ? \"\" : \"/\") +\n            anchor.pathname +\n            typeFilter +\n            anchor.hostname +\n            '\",\"s\":\"single\"}';\n  }\n\n  // ** UI Event Handlers **\n  \n  // <Nav> event handlers\n  private onSiteNavClick(event: React.MouseEvent<HTMLElement>) {\n    this.onNavClick(NavState.site, event);\n  }\n\n  private onLinkNavClick(event: React.MouseEvent<HTMLElement>) {\n    this.onNavClick(NavState.link, event);\n  }\n\n  private onNavClick(navState: NavState, event: React.MouseEvent<HTMLElement>) {\n\n     event.stopPropagation();\n     event.preventDefault();\n     \n     this.setState(\n      {\n        navState: navState,\n        isUrlValid:false,\n        url: \"\"          \n      }\n    );\n    return false;\n  }\n\n  // Link entry form\n  private onLinkTextChange(event: React.FormEvent<HTMLTextAreaElement>){\n    this.setState ({\n      url: event.currentTarget.value,\n      isUrlValid: this.isValidLink(event.currentTarget.value)\n    });\n  }\n\n  private onOkButtonClick(event: React.MouseEvent<HTMLButtonElement>){\n    this.resolvePickLink({name: \"\", url: this.state.url});\n    this.closeLinkPanel();\n  }\n  \n  private onCancelButtonClick(){\n    this.rejectPickLink();\n    this.closeLinkPanel();\n  }\n\n  // ** Validation  **\n  private isValidLink(url: string) {\n        const httpUrlRegex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n        const dataUrlRegex = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*)\\s*$/i;\n\n        return httpUrlRegex.test(url) ||\n               ((this.props.linkType | LinkType.image) && dataUrlRegex.test(url));\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}