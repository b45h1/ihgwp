{"version":3,"sources":["webparts/boxButtonWebPart/BoxButtonWebPartWebPart.ts"],"names":[],"mappings":"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","file":"webparts/boxButtonWebPart/BoxButtonWebPartWebPart.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport { Version, DisplayMode } from '@microsoft/sp-core-library';\nimport {\n  BaseClientSideWebPart,\n  IPropertyPaneConfiguration,\n  PropertyPaneLink,\n  PropertyPaneTextField,\n  PropertyPaneCheckbox,\n  PropertyPaneToggle,\n  PropertyPaneButton,\n  PropertyPaneButtonType,\n  PropertyPaneLabel\n} from '@microsoft/sp-webpart-base';\nimport { SPComponentLoader } from '@microsoft/sp-loader';\nimport * as strings from 'boxButtonWebPartStrings';\nimport BoxButtonWebPart from './components/BoxButtonWebPart';\nimport { IBoxButtonWebPartProps } from './components/IBoxButtonWebPartProps';\nimport { IBoxButtonWebPartWebPartProps } from './IBoxButtonWebPartWebPartProps';\nimport { SPFieldType, PropertyFieldCamlQueryOrderBy, SPFieldRequiredLevel, PropertyFieldCamlQueryFieldMapping } from '../../propertyPane/propertyFieldCamlQueryFieldMapping/PropertyFieldCamlQueryFieldMapping';\nimport pnp from 'sp-pnp-js';\nimport QueryStringParser from \"../../utilities/urlparser/queryStringParser\";\n\nconst urlField = \"URL\";\nconst iconField = \"Font Awesome Icon\";\nconst isBlueField = \"Has Blue Background\";\nconst openNewTabField = \"Open Link in New Tab\";\n\nexport default class BoxButtonWebPartWebPart extends BaseClientSideWebPart<IBoxButtonWebPartWebPartProps> {\n\n  constructor() {\n    super();\n\n    SPComponentLoader.loadCss('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css');\n    SPComponentLoader.loadScript('https://thehubcdnvz.azureedge.net/hub-web-parts/polyfill.closest.min.js');\n  }\n\n  public onInit(): Promise<void> {\n    return super.onInit().then(_ => {\n      pnp.setup({\n        spfxContext: this.context\n      });\n    });\n  }\n  \n  private _webpart : any;\n  public get webpart() : any {\n    return this._webpart;\n  }\n  public set webpart(v : any) {\n    this._webpart = v;\n  }\n\n  private _activeIndex : number = -1;\n  public get activeIndex() : number {\n    return this._activeIndex;\n  }\n  public set activeIndex(v : number) {\n    this._activeIndex = v;\n  }\n  \n  public render(): void {\n    // Copy properties from previous version if needed (??)\n    if(!this.properties.data && this.properties.name){\n      this.properties.data = [{\n        name: this.properties.name,\n        isBlue: this.properties.isBlue,\n        icon: this.properties.fontAwesomeIcon,\n        url: this.properties.url,\n        openNew: this.properties.newTab\n      }];\n      this.properties.name = undefined;\n      this.properties.isBlue = undefined;\n      this.properties.fontAwesomeIcon = undefined;\n      this.properties.url = undefined;\n      this.properties.newTab = undefined;\n    }\n\n    const props = this.properties;\n    const propPaneRefresh = this.context.propertyPane.refresh;\n\n    // Set up the BoxButtonWebPart component\n    const element:React.ReactElement<IBoxButtonWebPartProps> = React.createElement(\n      BoxButtonWebPart,\n      {\n        name: this.properties.name,\n        isBlue: this.properties.isBlue,\n        fontAwesomeIcon: this.properties.fontAwesomeIcon,\n        url: this.properties.url,\n        newTab: this.properties.newTab,\n        data: this.properties.data,\n        title: this.properties.title,\n        usesListMode:this.properties.usesListMode,\n        advancedCamlQuery: this.properties.advancedCamlQuery,\n        advancedCamlData: this.properties.advancedCamlData,\n        links:[],\n        isEdit: this.displayMode===DisplayMode.Edit,\n        setTitle: (title:string) => {\n          props.title = title;\n        },\n        // Callback from main component when user selects a new link\n        setUrl: (name: string, url:string) => {\n          // If there is no active index, add a new link at the top and make it active\n          if(this.activeIndex===-1){\n            this.properties.data.push({\n              name: name,\n              isBlue: false,\n              icon: \"\",\n              url: \"\",\n              openNew: false\n            });\n            this.activeIndex = 0;\n          }\n\n          // Figure out if it's a document\n          var isDoc = false;\n          const docExtensions = [\"pdf\", \"xls\", \"xlsx\", \"doc\", \"docx\", \"ppt\", \"pptx\", \"pptm\", \"dot\"];\n          for(var i in docExtensions){\n            if(url.indexOf(docExtensions[i], url.length - docExtensions[i].length) !== -1)\n              isDoc = true;\n          }\n\n          if (name) {\n            props.data[this.activeIndex].name = \n              name.split('.')[0].replace('-',' ').replace('_',' ');\n          }\n\n          // In the \"data\" (array of links) adjust the URL to use OWA if it's a document\n          props.data[this.activeIndex].url=url+( isDoc ? \"?web=1\" : \"\");\n          // If the property pane isn't already open, open it and refresh it\n          if(!this.propertyPaneRenderedByWebPart)\n            this.context.propertyPane.open();\n          propPaneRefresh();\n        },\n        // Called when user clicks edit on a link in BoxButtonWebPart\n        editItem: (index:number) => {\n          if(index===-1){\n            this.properties.data.push({\n              name: strings.TitlePlaceholder,\n              isBlue: false,\n              icon: \"\",\n              url: \"\",\n              openNew: false\n            });\n            index = this.properties.data.length-1;\n          }\n          this.activeIndex = index;\n          this.context.propertyPane.open();\n        },\n        // Called when user clicks delete on a link in BoxButtonWebPart\n        deleteItem: (index:number)=>{          \n          this.properties.data.splice(index,1);\n          this.render();     \n        },\n        // Called when a user rearranges links in BoxButtonWebPart\n        rearrangeItems: (newOrder:number[])=>{\n          const newArr = [];\n          const currArr = this.properties.data;\n          for(var num in newOrder)\n            newArr.push(this.properties.data[newOrder[num]]);\n          this.properties.data.length=0;\n          for(var val in newArr)\n            this.properties.data.push(newArr[val]);\n          this.render();\n        },\n        context: this.context\n      }\n    );\n\n    // OK we have the BoxButtonWebPart component\n    // If we're in List mode, read the list\n    if(this.properties.usesListMode){\n      const propData = this.properties.advancedCamlData ? JSON.parse(this.properties.advancedCamlData) : {fieldMappings:[], selectedList:{}};\n      if(propData.selectedList.id){\n        pnp.sp.web.lists.getById(propData.selectedList.id).getItemsByCAMLQuery({ ViewXml: QueryStringParser.ReplaceQueryStringParameters(this.properties.advancedCamlQuery)}).then((response:any[])=>{\n          response.forEach(value => {\n          var link = {};\n          propData.fieldMappings.forEach(mapping => {\n            switch(mapping.type){\n              case SPFieldType.URL:\n                link[mapping.name] = value[mapping.mappedTo] ? value[mapping.mappedTo][\"Url\"] : null;\n                link[mapping.name+\"_text\"] = value[mapping.mappedTo] ? value[mapping.mappedTo][\"Description\"] : null;\n                break;\n              default: \n                link[mapping.name] = value[mapping.mappedTo];\n                break;\n              }\n            });\n            if(link[urlField] !== null)\n              element.props.links.push(link);\n          });\n          // TODO: Return from ReactDom.render has a race condition\n          // Switch to a function ref\n          this.webpart = ReactDom.render(element, this.domElement);\n        }).catch((error)=>{ });\n      }\n    }\n    else\n      // Not in list mode, just render the BoxButtonWebPart\n      // TODO: Return from ReactDom.render has a race condition\n      // Switch to a function ref\n      this.webpart = ReactDom.render(element, this.domElement);\n  } // render()\n\n  public setTitle(title:string){\n    this.properties.title = title;\n  }\n\n  // onClick of \"Change\" button in classic editing panel\n  // TODO: Why is this public?\n  // Event doesn't seem to be passed in\n  public openLinkSelector(event){\n    this.webpart.openLinkPicker(event);\n  }\n\n  public itemValidation(length: number, required: boolean, errorText: string, value: string): Promise<string> {\n    return new Promise<string>((resolve: (validationMessage: string)=>void)=>{\n      if(value.length>length){\n        resolve(errorText);\n      }\n      else if(required && value.length<1){\n        resolve(strings.RequiredValueErrorText);\n      }\n      else{\n        resolve(\"\");\n      }\n    });\n  }\n\n  // public nameValidation(value: string): Promise<string>{\n  //   return new Promise<string>((resolve: (validationMessage: string)=>void)=>{\n  //     if(value.length>40){\n  //       resolve(strings.EditItemGeneralTitleErrorText);\n  //     }\n  //     else{\n  //       resolve('');\n  //     }\n  //   });\n  // }\n\n  protected get dataVersion(): Version {\n    return Version.parse('1.0');\n  }\n\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\n    if(this.context.propertyPane.isRenderedByWebPart()) return this.getEditItemPropertyPane();\n    return this.getBasicPropertyPane();\n  }\n\n  // Property pane for List mode\n  public getBasicPropertyPane(): IPropertyPaneConfiguration{\n    return {\n      pages: [\n        {\n          header: {\n            description: ''//strings.PropertyPaneBaseDescription\n          },\n          groups:[\n            {\n              groupName: strings.AdvancedListModeGroupLabel,\n              isCollapsed: !this.properties.usesListMode,\n              groupFields:[\n                PropertyPaneToggle('usesListMode',{\n                  label: strings.AdvancedEnableListModeLabel,\n                  onText: strings.EditItemColorOnLabel,\n                  offText: strings.EditItemColorOffLabel\n                }),\n                PropertyPaneLabel('listModeInfo',{\n                  text: strings.AdvancedEnableListModeInfo\n                }),\n                PropertyFieldCamlQueryFieldMapping('advancedCamlQuery',{\n                  label: \"\",\n                  dataPropertyPath: 'advancedCamlData',\n                  query: this.properties.advancedCamlQuery,\n                  fieldMappings: [\n                    { name: urlField,type: SPFieldType.URL, requiredLevel: SPFieldRequiredLevel.Required },\n                    { name: iconField, type: SPFieldType.Text, requiredLevel: SPFieldRequiredLevel.Required },\n                    { name: isBlueField, type: SPFieldType.Boolean, requiredLevel: SPFieldRequiredLevel.Required },\n                    { name: openNewTabField, type: SPFieldType.Boolean, requiredLevel: SPFieldRequiredLevel.Required }\n                  ],\n                  createFields:[\n                    '<Field ID=\"{c29e077d-f466-4d8e-8bbe-72b66c5f205c}\" Name=\"URL\" SourceID=\"http://schemas.microsoft.com/sharepoint/v3\" StaticName=\"URL\" Group=\"Base Columns\" Type=\"URL\" DisplayName=\"URL\" Required=\"TRUE\"/>',\n                    '<Field Type=\"Text\" DisplayName=\"FontAwesomeIcon\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" MaxLength=\"255\" Group=\"Web Part Columns\" ID=\"{6df0c002-e0f6-4801-aa83-b7a5bb80f0f4}\" SourceID=\"{a5df0f41-264b-4bf8-a651-222fcdf5d32d}\" StaticName=\"FontAwesomeIcon\" Name=\"FontAwesomeIcon\" Version=\"5\" />',\n                    '<Field Type=\"Number\" DisplayName=\"SortOrder\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Group=\"Web Part Columns\" ID=\"{7a911a9e-dbe1-4a87-bd40-c042db929a80}\" SourceID=\"{a5df0f41-264b-4bf8-a651-222fcdf5d32d}\" StaticName=\"SortOrder\" Name=\"SortOrder\" Version=\"5\" />',\n                    '<Field Type=\"Boolean\" DisplayName=\"HasBlueBackground\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Group=\"Web Part Columns\" ID=\"{f9ba1903-e7be-42cd-843e-f898d4c1fcb4}\" SourceID=\"{f9ba1903-e7be-42cd-843e-f898d4c1fcb4}\" StaticName=\"HasBlueBackground\" Name=\"HasBlueBackground\" Version=\"5\" />',\n                    '<Field Type=\"Boolean\" DisplayName=\"OpenLinkinNewTab\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Group=\"Web Part Columns\" ID=\"{4bf7c60f-0737-49c9-894c-6a31af134242}\" SourceID=\"{4bf7c60f-0737-49c9-894c-6a31af134242}\" StaticName=\"OpenLinkInNewTab\" Name=\"OpenLinkInNewTab\" Version=\"5\" />'\n                  ],\n                  createTitleRequired:false,\n                  includeHidden: false,\n                  orderBy: PropertyFieldCamlQueryOrderBy.Title,\n                  showOrderBy: true,\n                  showFilters: true,\n                  showMax:false,\n                  showCreate:true,\n                  render: this.render.bind(this),\n                  onPropertyChange: this.onPropertyPaneFieldChanged.bind(this),\n                  context: this.context,\n                  properties: this.properties,\n                  disabled: !this.properties.usesListMode,\n                  onGetErrorMessage: null,\n                  deferredValidationTime: 0,\n                  key: 'spListQueryFieldId'\n                })\n              ]\n            }\n          ],\n          displayGroupsAsAccordion: true            \n        }\n      ]\n    };\n  }\n\n  // Property pane for editing an item in non-List mode\n  public getEditItemPropertyPane(): IPropertyPaneConfiguration{\n    return {\n      pages: [\n        {\n          header: {\n            description: \"\"\n          },\n          displayGroupsAsAccordion:true,\n          groups: [\n            {\n              groupName: strings.EditItemGeneralLabel,\n              groupFields:[\n                PropertyPaneTextField(\"data[\"+this.activeIndex+\"].name\",{\n                  label: strings.EditItemGeneralTitleLabel,\n                  description: strings.EditItemGeneralTitlePreCountLabel+(40-this.properties.data[this.activeIndex].name.length)+strings.EditItemGeneralTitlePostCountLabel,\n                  onGetErrorMessage: this.itemValidation.bind(this, 40, true, strings.EditItemGeneralTitleErrorText)\n                  //onGetErrorMessage: this.nameValidation.bind(this)\n                }),\n                PropertyPaneLabel(\"itemLinkLabel\",{\n                  text: strings.EditItemGeneralSelectLinkLabel\n                }),\n                PropertyPaneLink(\"data[\"+this.activeIndex+\"].url\",{\n                  target: \"_blank\",\n                  href: this.properties.data[this.activeIndex].url,\n                  text: this.properties.data[this.activeIndex].url\n                }),\n                PropertyPaneButton(\"itemChangeLink\",{\n                  text: strings.EditItemGeneralSelectLinkButtonText,\n                  buttonType: PropertyPaneButtonType.Primary,\n                  // ??? Link Selector - only this is passed, no other arg or event\n                  onClick: this.openLinkSelector.bind(this)\n                }),\n                PropertyPaneCheckbox(\"data[\"+this.activeIndex+\"].openNew\",{\n                  text:strings.EditItemGeneralOpenTabLabel\n                })\n              ]\n            },\n            {\n              groupName: strings.EditItemIconLabel,\n              groupFields:[\n                PropertyPaneTextField(\"data[\"+this.activeIndex+\"].icon\",{\n                  label: strings.EditItemIconEntryLabel,\n                  placeholder: strings.EditItemIconEntryPlaceholder\n                }),\n                PropertyPaneLink('iconShortcut',{\n                  text: strings.EditItemIconEntryLinkText,\n                  href:\"http://fontawesome.io/cheatsheet/\",\n                  target: \"_blank\"\n                })\n              ]\n            },\n            {\n              groupName: strings.EditItemColorLabel,\n              groupFields:[\n                PropertyPaneToggle(\"data[\"+this.activeIndex+\"].isBlue\",{\n                  label:strings.EditItemColorFieldLabel,\n                  onText: strings.EditItemColorOnLabel,\n                  offText: strings.EditItemColorOffLabel\n                })\n              ]\n            }\n          ]\n        }\n      ]\n    };\n  }\n}\n"],"sourceRoot":"..\\..\\..\\src"}