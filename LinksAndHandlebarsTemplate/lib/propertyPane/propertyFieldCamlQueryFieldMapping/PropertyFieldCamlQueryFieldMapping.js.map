{"version":3,"sources":["propertyPane/propertyFieldCamlQueryFieldMapping/PropertyFieldCamlQueryFieldMapping.ts"],"names":[],"mappings":"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","file":"propertyPane/propertyFieldCamlQueryFieldMapping/PropertyFieldCamlQueryFieldMapping.js","sourcesContent":["/**\n * @file PropertyFieldCamlQueryFieldMapping.ts\n * Define a custom field of type PropertyFieldCamlQueryFieldMapping for\n * the SharePoint Framework (SPfx)\n *\n * @copyright 2017 Shire\n * Released under MIT licence\n * \n * Uses the PropertyFieldCamlQuery by Olivier Carpentier\n *\n */\nimport * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport {\n  IPropertyPaneField,\n  PropertyPaneFieldType\n} from '@microsoft/sp-webpart-base';\nimport PropertyFieldCamlQueryFieldMappingHost, { IPropertyFieldCamlQueryFieldMappingHostProps } from './PropertyFieldCamlQueryFieldMappingHost';\nimport { IWebPartContext} from '@microsoft/sp-webpart-base';\n\nexport enum PropertyFieldCamlQueryOrderBy {\n  Id = 0,\n  Title = 1\n}\n\nexport enum SPFieldRequiredLevel{\n  Required,\n  Optional\n}\n\nexport interface IList{\n  title?:string;\n  id?:string;\n  isDocLib?: boolean;\n}\n\nexport interface ISort{\n  title?:string;\n  direction?:SortDirection;\n}\n\nexport interface IField{\n  name:string;\n  internalName:string;\n  kind:SPFieldType;\n}\n\nexport interface IMapping{\n  name?:string;\n  type?: SPFieldType;\n  mappedTo?: string;\n  enabled?:boolean;\n  requiredLevel?: SPFieldRequiredLevel;\n  field?:string;\n}\n\nexport enum SPFieldType{\n  Boolean = 0,\n  Choice = 1,\n  Counter = 2,\n  Date = 3,\n  DateTime = 4,\n  Integer = 5,\n  Lookup = 6,\n  Number = 7,\n  Text = 8,\n  URL = 9,\n  User = 10,\n  Taxonomy = 11\n}\n\nexport enum SortDirection{\n  Ascending = 0,\n  Descending = 1\n}\n\n/**\n * @interface\n * Public properties of the PropertyFieldCamlQuery custom field\n *\n */\nexport interface IPropertyFieldCamlQueryFieldMappingProps {\n  /**\n   * @var\n   * Property field label displayed on top\n   */\n  label: string;\n  context: IWebPartContext;\n  dataPropertyPath:string;\n  query:string;\n  baseTemplate?: number;\n  includeHidden?: boolean;\n  orderBy?: PropertyFieldCamlQueryOrderBy;\n  showOrderBy?: boolean;\n  showMax?: boolean;\n  showFilters?: boolean;\n  showCreate?:boolean;\n  fieldMappings: IMapping[];\n  createFields?: string[];\n  createTitleRequired?: boolean;\n  render(): void;\n  max?: number;\n  /**\n   * @function\n   * Defines a onPropertyChange function to raise when the selected value changed.\n   * Normally this function must be always defined with the 'this.onPropertyChange'\n   * method of the web part object.\n   */\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\n    /**\n   * @var\n   * Parent Web Part properties\n   */\n  properties: any;\n  /**\n   * @var\n   * An UNIQUE key indicates the identity of this control\n   */\n  key?: string;\n  /**\n   * Whether the property pane field is enabled or not.\n   */\n  disabled?: boolean;\n  /**\n   * The method is used to get the validation error message and determine whether the input value is valid or not.\n   *\n   *   When it returns string:\n   *   - If valid, it returns empty string.\n   *   - If invalid, it returns the error message string and the text field will\n   *     show a red border and show an error message below the text field.\n   *\n   *   When it returns Promise<string>:\n   *   - The resolved value is display as error message.\n   *   - The rejected, the value is thrown away.\n   *\n   */\n   onGetErrorMessage?: (value: string) => string | Promise<string>;\n   /**\n    * Custom Field will start to validate after users stop typing for `deferredValidationTime` milliseconds.\n    * Default value is 200.\n    */\n   deferredValidationTime?: number;\n}\n\n/**\n * @interface\n * Private properties of the PropertyFieldCamlQuery custom field.\n * We separate public & private properties to include onRender & onDispose method waited\n * by the PropertyFieldCustom, witout asking to the developer to add it when he's using\n * the PropertyFieldCamlQuery.\n *\n */\nexport interface IPropertyFieldCamlQueryFieldMappingPropsInternal extends IPropertyFieldCamlQueryFieldMappingProps {\n  label: string;\n  targetProperty: string;\n  context: IWebPartContext;\n  query:string;\n  dataPropertyPath: string;\n  baseTemplate?: number;\n  orderBy?: PropertyFieldCamlQueryOrderBy;\n  includeHidden?: boolean;\n  showOrderBy?: boolean;\n  showMax?: boolean;\n  showFilters?: boolean;\n  showCreate?: boolean;\n  fieldMappings: IMapping[];\n  createFields?: string[];\n  createTitleRequired?:boolean;\n  render():void;\n  max?: number;\n  onRender(elem: HTMLElement): void;\n  onDispose(elem: HTMLElement): void;\n  onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void;\n  properties: any;\n  key: string;\n  disabled?: boolean;\n  onGetErrorMessage?: (value: string) => string | Promise<string>;\n  deferredValidationTime?: number;\n}\n\n/**\n * @interface\n * Represents a PropertyFieldCamlQuery object\n *\n */\nclass PropertyFieldCamlQueryBuilder implements IPropertyPaneField<IPropertyFieldCamlQueryFieldMappingPropsInternal> {\n\n  //Properties defined by IPropertyPaneField\n  public type: PropertyPaneFieldType = PropertyPaneFieldType.Custom;\n  public targetProperty: string;\n  public properties: IPropertyFieldCamlQueryFieldMappingPropsInternal;\n\n  //Custom properties label: string;\n  private label: string;\n  private context: IWebPartContext;\n  private dataPropertyPath:string;\n  private query:string;\n  private baseTemplate: number;\n  private orderBy: PropertyFieldCamlQueryOrderBy;\n  private includeHidden: boolean;\n  private showOrderBy: boolean;\n  private showMax: boolean;\n  private showFilters: boolean;\n  private showCreate:boolean;\n  private fieldMappings: IMapping[];\n  private createFields: string[];\n  private createTitleRequired: boolean;\n  private renderWebpart = ()=>{ this.properties.render(); };\n  private max: number;\n  public onPropertyChange(propertyPath: string, oldValue: any, newValue: any): void {}\n  private customProperties: any;\n  private key: string;\n  private disabled: boolean = false;\n  private onGetErrorMessage: (value: string) => string | Promise<string>;\n  private deferredValidationTime: number = 200;\n\n  /**\n   * @function\n   * Ctor\n   */\n  public constructor(_targetProperty: string, _properties: IPropertyFieldCamlQueryFieldMappingPropsInternal) {\n    this.render = this.render.bind(this);\n    this.targetProperty = _targetProperty;\n    this.properties = _properties;\n    this.properties.onDispose = this.dispose;\n    this.properties.onRender = this.render;\n    this.label = _properties.label;\n    this.context = _properties.context;\n    this.dataPropertyPath = _properties.dataPropertyPath;\n    this.query = _properties.query;\n    this.baseTemplate = _properties.baseTemplate;\n    this.orderBy = _properties.orderBy;\n    this.includeHidden = _properties.includeHidden;\n    this.showOrderBy = _properties.showOrderBy;\n    this.showMax = _properties.showMax;\n    this.showFilters = _properties.showFilters;\n    this.showCreate = _properties.showCreate;\n    this.fieldMappings = _properties.fieldMappings;\n    this.createFields = _properties.createFields;\n    this.createTitleRequired = _properties.createTitleRequired;\n    this.max = _properties.max;\n    this.onPropertyChange = _properties.onPropertyChange;\n    this.customProperties = _properties.properties;\n    this.key = _properties.key;\n    if (_properties.disabled === true)\n      this.disabled = _properties.disabled;\n    this.onGetErrorMessage = _properties.onGetErrorMessage;\n    if (_properties.deferredValidationTime !== undefined)\n      this.deferredValidationTime = _properties.deferredValidationTime;\n  }\n\n  /**\n   * @function\n   * Renders the SPListPicker field content\n   */\n  private render(elem: HTMLElement): void {\n    //Construct the JSX properties\n    const element: React.ReactElement<IPropertyFieldCamlQueryFieldMappingHostProps> = React.createElement(PropertyFieldCamlQueryFieldMappingHost, {\n      label: this.label,\n      targetProperty: this.targetProperty,\n      context: this.context,\n      query: this.query,\n      dataPropertyPath:this.dataPropertyPath,\n      baseTemplate: this.baseTemplate,\n      orderBy: this.orderBy,\n      includeHidden: this.includeHidden,\n      showOrderBy: this.showOrderBy,\n      showMax: this.showMax,\n      showFilters: this.showFilters,\n      showCreate: this.showCreate,\n      fieldMappings: this.fieldMappings,\n      createFields: this.createFields,\n      createTitleRequired: this.createTitleRequired,\n      max: this.max,\n      onDispose: this.dispose,\n      onRender: this.render,\n      onPropertyChange: this.onPropertyChange,\n      properties: this.customProperties,\n      key: this.key,\n      disabled: this.disabled,\n      onGetErrorMessage: this.onGetErrorMessage,\n      deferredValidationTime: this.deferredValidationTime,\n      render: this.renderWebpart\n    });\n    //Calls the REACT content generator\n    ReactDom.render(element, elem);\n  }\n\n  /**\n   * @function\n   * Disposes the current object\n   */\n  private dispose(elem: HTMLElement): void {\n\n  }\n\n}\n\n/**\n * @function\n * Helper method to create a SPList Picker on the PropertyPane.\n * @param targetProperty - Target property the SharePoint list picker is associated to.\n * @param properties - Strongly typed SPList Picker properties.\n */\nexport function PropertyFieldCamlQueryFieldMapping(targetProperty: string, properties: IPropertyFieldCamlQueryFieldMappingProps): IPropertyPaneField<IPropertyFieldCamlQueryFieldMappingPropsInternal> {\n\n    //Create an internal properties object from the given properties\n    var newProperties: IPropertyFieldCamlQueryFieldMappingPropsInternal = {\n      label: properties.label,\n      targetProperty: targetProperty,\n      context: properties.context,\n      query:properties.query,\n      dataPropertyPath:properties.dataPropertyPath,\n      baseTemplate: properties.baseTemplate,\n      orderBy: properties.orderBy,\n      includeHidden: properties.includeHidden,\n      showOrderBy: properties.showOrderBy,\n      showMax: properties.showMax,\n      showFilters: properties.showFilters,\n      showCreate: properties.showCreate,\n      fieldMappings: properties.fieldMappings,\n      createFields: properties.createFields,\n      createTitleRequired: properties.createTitleRequired,\n      render: properties.render,\n      max: properties.max,\n      onPropertyChange: properties.onPropertyChange,\n      properties: properties.properties,\n      onDispose: null,\n      onRender: null,\n      key: properties.key,\n      disabled: properties.disabled,\n      onGetErrorMessage: properties.onGetErrorMessage,\n      deferredValidationTime: properties.deferredValidationTime\n    };\n    //Calls the PropertyFieldCamlQuery builder object\n    //This object will simulate a PropertyFieldCustom to manage his rendering process\n    return new PropertyFieldCamlQueryBuilder(targetProperty, newProperties);\n}"],"sourceRoot":"..\\..\\..\\src"}