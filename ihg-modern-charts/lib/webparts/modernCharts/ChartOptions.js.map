{"version":3,"sources":["webparts/modernCharts/ChartOptions.ts"],"names":[],"mappings":"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","file":"webparts/modernCharts/ChartOptions.js","sourcesContent":["export interface Theme {\n    name: string;\n    bgColors: Array<string>;\n    hoverColors: Array<string>;\n}\n\nimport * as cs from 'color-scheme/lib/color-scheme';\nimport { MChart } from './IModernChartsWebPartProps';\n\nexport default class ChartOptions {\n\n    public static _sampleData: Array<number> = [100, 50, 275, 100];\n    public static _sampleCols: Array<string> = ['UPS','FedEx','USPS','OnTrac'];\n\n    public static Options(): Object{\n        return {\n            legend: {\n                display: true,\n                layout: {\n                    padding: 5\n                },\n                position: 'bottom',\n                labels: {\n                    fontColor: 'rgba(100, 100, 100, 1.0)'\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                }\n            }\n        };\n    }\n\n    public static Data(chart: MChart) {\n            return  {\n            labels: chart.labels,\n            datasets: [{\n            data: chart.data,\n            backgroundColor: chart.config.bgColors,\n            hoverBackgroundColor: chart.config.hoverColors\n            }]\n        };\n    }\n\n    public static RandomColors(): Object {\n        var colors = {bgColors: [], hoverColors: []};\n        var colorTheme = new cs;\n        var colorHue = Math.floor(Math.random() * 360);\n        var colorPalette = colorTheme.from_hue(colorHue).scheme('analogic').variation('default');\n        colors.bgColors = this.shuffleArray(colorPalette.add_complement(true).colors());\n        colors.hoverColors = this.shuffleArray((colorPalette.add_complement(true).colors()).splice(6,6));\n        colors.bgColors.forEach((hex,i)=> { colors.bgColors[i] = '#' + hex; });\n        colors.hoverColors.forEach((hex,i)=> { colors.hoverColors[i] = '#' + hex; });\n\n        return colors;\n    }\n    public static SampleData() {\n        var theme = this.RandomColors();\n        return  {\n            labels: [\n                'Red',\n                'Green',\n                'Yellow',\n                '??'\n            ],\n            datasets: [{\n            data: [100, 50, 275, 100],\n            backgroundColor: theme['bgColors'],\n            hoverBackgroundColor: theme['hoverColors']\n            }]\n        };\n    }\n\n    public static shuffleArray(array){\n        var currentIndex = array.length, temporaryValue, randomIndex ;\n        while (0 !== currentIndex) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n}\n"],"sourceRoot":"..\\..\\..\\src"}