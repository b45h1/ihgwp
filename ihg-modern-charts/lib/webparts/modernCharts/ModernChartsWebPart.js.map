{"version":3,"sources":["webparts/modernCharts/ModernChartsWebPart.ts"],"names":[],"mappings":"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","file":"webparts/modernCharts/ModernChartsWebPart.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport { Version } from '@microsoft/sp-core-library';\nimport {\n  BaseClientSideWebPart,\n  IPropertyPaneConfiguration,\n  PropertyPaneTextField,\n  IWebPartContext,\n  PropertyPaneSlider,\n  PropertyPaneDropdown,\n  IPropertyPaneDropdownOption,\n  PropertyPaneButton\n} from '@microsoft/sp-webpart-base';\nimport * as strings from 'modernChartsStrings';\nimport ModernCharts from './components/ModernCharts';\nimport { IModernChartsProps } from './IModernChartsWebPartProps';\nimport { MChart } from './IModernChartsWebPartProps';\nimport { IModernChartsWebPartProps } from './IModernChartsWebPartProps';\nimport { ChartConfiguration } from './IModernChartsWebPartProps';\nimport ChartOptions from './ChartOptions';\nimport {\n  SPHttpClient,\n  SPHttpClientResponse\n} from '@microsoft/sp-http';\n\nexport interface ISPLists {\n  value: ISPList[];\n}\n\nexport interface ISPList {\n  Title: string;\n  Id: string;\n}\n\nexport default class ModernChartsWebPart extends BaseClientSideWebPart<IModernChartsWebPartProps> {\n\n  private reactCharts: React.ReactElement<IModernChartsProps>;\n\n  // Columns Enable / Disable\n  private colsDisabled: boolean = true;\n  private listDisabled: boolean = true;\n  private urlTextDisabled: boolean = true;\n\n  //Property Dropdown Options\n  private _chartThemeOptions: IPropertyPaneDropdownOption[] = [];\n  private _siteOptions: IPropertyPaneDropdownOption[] = [];\n  private _dropdownOptions: IPropertyPaneDropdownOption[] = [];\n  private _columnOptions: IPropertyPaneDropdownOption[] = [];\n  private _ListColumnOptions: Array<IPropertyPaneDropdownOption> = [];\n  private _chartSizeOptions: IPropertyPaneDropdownOption[] = [\n    {key: 3, text:'Small'},\n    {key: 6, text:'Medium'},\n    {key: 9, text: 'Medium-Large'},\n    {key: 12, text: 'Large'}\n  ];\n  private _chartTypeOptions: IPropertyPaneDropdownOption[] = [\n    {key: 'bar', text:'Bar'},\n    {key: 'horizontalbar', text:'Horizontal Bar'},\n    {key: 'doughnut', text: 'Doughnut'},\n    {key: 'line', text: 'Line'},\n    {key: 'pie', text: 'Pie'},\n    {key: 'polar', text:'Polar'},\n    {key: 'radar', text:'Radar'}\n  ];\n  private _chartColActions: IPropertyPaneDropdownOption[] = [\n    {key: 'average', text: 'Average'},\n    {key: 'count', text: 'Count'},\n    {key: 'sum', text: 'Sum'}\n  ];\n\n  public constructor(context: IWebPartContext) {\n    super();\n  }\n  private ChartThemes: ChartOptions;\n\n  private defaultOptions: Object = {\n      legend: {\n          display: false,\n          layout: {\n              padding: 10\n          },\n          position: 'bottom',\n          labels: {\n              fontColor: 'rgba(100, 100, 100, 1.0)'\n          }\n      }\n  };\n\n  public defaultChartConfig(chartDesc: string): ChartConfiguration {\n    var defConfig = {\n      title: 'Chart Title',\n      description: chartDesc,\n      type: 'doughnut',\n      list: null,\n      dataurl: this.context.pageContext.web.absoluteUrl,\n      url: this.context.pageContext.web.absoluteUrl,\n      other: true,\n      dataUrlDisabled: true,\n      colsDisabled: true,\n      listsDisabled: false,\n      col1: '',\n      col2: '',\n      act: '',\n      unique: '',\n      size: 12,\n      options: ChartOptions.Options(),\n      columns: [],\n      lists: this.properties.listOptions,\n      theme: \"Random\",\n      bgColors: ChartOptions.RandomColors()['bgColors'],\n      hoverColors: ChartOptions.RandomColors()['bgColors']\n    };\n\n    return defConfig;\n  }\n\n  public render(): void {\n    //Initialize first demo chart\n    if (!this.properties.state){\n        this.properties.state = true;\n        this.properties.firstLoad = true;\n        this.properties.numCharts = 1;\n        this.properties.chartConfig = [];\n        const firstChartConfig = this.defaultChartConfig;\n        this.properties.chartConfig.push(this.defaultChartConfig('Demo Chart, Edit Web Part to Customize'));\n    }\n    this.getChartData();\n  }\n\n  protected get dataVersion(): Version {\n    return Version.parse('1.0');\n  }\n\n  private getChartData(): void{\n    const _chartData: Array<MChart> = [];\n    var _count = 0;\n    this.properties.chartConfig.forEach((cfg,i) => {\n      if (cfg.list != null){\n      this.getData(cfg).then((response) => {\n        const chart = this.calculateData(response.value, cfg);\n        const _chart: MChart = {data:chart['data'],labels:chart['labels'],config:cfg,key: i};\n        _chartData[i] = _chart;\n        if (++_count == this.properties.chartConfig.length){ this.getCharts(_chartData); }\n      });\n    } else {\n        const _chart: MChart = {data:ChartOptions._sampleData,labels:ChartOptions._sampleCols,config:cfg,key: i};\n        _chartData[i] = _chart;\n        if (++_count == this.properties.chartConfig.length){ this.getCharts(_chartData); }\n      }\n    });\n  }\n\n  private getCharts(charts: Array<MChart>): void{\n    const chartArea: React.ReactElement<IModernChartsProps> = React.createElement(ModernCharts,{\n        description: this.properties.description,\n        title: this.properties.description,\n        state: this.properties.state,\n        config: {},\n        context: this.context,\n        data: {},\n        charts: charts\n    });\n    ReactDom.render(chartArea,this.domElement);\n  }\n\n  private calculateData(data: Array<Object>,config:ChartConfiguration): Object {\n    var values: Array<number> = [];\n    var labels: Object = this.getUnique(data, config);\n    var dataVal: Array<Array<any>> = this.getValues(data,labels['unique'],config);\n\n    switch(config.act) {\n      case 'sum':\n        dataVal.forEach((vals,i) => {\n          values[i] = 0;\n          vals.forEach((val) => {\n            values[i]+=parseFloat(val);\n          });\n        });\n        break;\n      case 'average':\n        dataVal.forEach((vals,i) => {\n          values[i] = 0;\n          vals.forEach((val) => {\n            values[i]+=parseFloat(val);\n          });\n          if (values[i] != 0) {\n            values[i] = values[i] / vals.length;\n          }\n        });\n        break;\n      case 'count':\n        dataVal.forEach((vals) => {\n          values.push(vals.length);\n        });\n        break;\n      default:\n        values = [100,250,90,300];\n        break;\n    }\n    return { data:values, labels:labels['labels'] };\n  }\n\n  private getUnique(data: Array<Object>,config:ChartConfiguration): Object {\n    const chLabels: Object = { unique:[], labels:[] };\n      data.forEach((item) => {\n        if (chLabels['unique'].indexOf(item[config.unique]) == -1 && item[config.unique] != null && item[config.unique] != \"\"){\n          chLabels['unique'].push(item[config.unique]);\n          chLabels['labels'].push(item[config.col1]);\n        }\n      });\n    return chLabels;\n  }\n\n  private getValues(data: Array<Object>,unique: Array<string>, config: ChartConfiguration): Array<Array<any>>{\n\n    const values: Object = {};\n    const vals: Array<Array<any>> = [[]];\n    unique.forEach((col,i) => {\n      values[col] = [];\n      vals[i] = [];\n      data.forEach((item, _i) => {\n        if (item[config.unique] == col){\n          vals[i].push(item[config.col2]);\n        }\n      });\n    });\n    return vals;\n  }\n\n  protected onPropertyPaneFieldChanged(propertyPath: string, oldValue: any, newValue: any): void {\n    var pPath = propertyPath;\n    var pPathInd = propertyPath[12];\n\n    if (pPath === 'numCharts' && oldValue != newValue) {\n      if (this.properties.chartConfig.length < newValue){\n        while (this.properties.chartConfig.length < newValue) {\n          this.properties.chartConfig.push(this.defaultChartConfig('Chart Description'));\n        }\n      } else if (this.properties.chartConfig.length > newValue) {\n          while (newValue < this.properties.chartConfig.length) {\n            this.properties.chartConfig.pop();\n          }\n        }\n    }\n\n    if (propertyPath.indexOf('[') != -1) {\n      pPath = propertyPath.substring(16).replace('\\\"]','');\n    }\n    if (pPath === 'url' && newValue == 'other' && (oldValue != newValue)){\n      this.urlTextDisabled = false;\n      this.properties.chartConfig[pPathInd].dataUrlDisabled = false;\n      this.properties.chartConfig[pPathInd].dataurl = oldValue;\n    }\n    if (pPath === 'url' && newValue != 'other' && (oldValue != newValue)){\n      this.properties.chartConfig[pPathInd].dataurl = newValue;\n      this.properties.chartConfig[pPathInd].dataUrlDisabled = true;\n    }\n    if ( (pPath === 'url' && (newValue != oldValue)) || (pPath === 'dataurl' && (newValue != oldValue)) ){\n      this._updateListTitles(newValue,this.properties.chartConfig[pPathInd]);\n      this.properties.chartConfig[pPathInd]['other'] = true;\n      this.properties.state = true;\n    }\n    if (pPath === 'list' && (newValue != oldValue)){\n      var siteUrl = this.properties.chartConfig[pPathInd]['dataurl'];\n      this._updateListColumns(siteUrl,newValue,this.properties.chartConfig[pPathInd]);\n      this.properties.chartConfig[pPathInd].colsDisabled = false;\n    }\n    if (pPath === 'theme' && (newValue != oldValue)){\n      const newTheme = ChartOptions.RandomColors();\n      this.properties.chartConfig[pPathInd].bgColors = newTheme['bgColors'];\n      this.properties.chartConfig[pPathInd].hoverColors = newTheme['hoverColors'];\n    }\n    this.context.propertyPane.refresh();\n    this.render();\n  }\n\n  protected onPropertyPaneConfigurationStart(): void {\n\n      if (this.properties.firstLoad || this.properties.chartConfig[0].columns.length <= 0 || this.properties.chartConfig[0].list.length <= 0){\n        this.context.statusRenderer.displayLoadingIndicator(this.domElement, 'First Time Configuration');\n\n        this.properties.firstLoad = false;\n        this._getSiteRootWeb()\n          .then((response0) => {\n          this._getSites(response0['Url'])\n            .then((response) => {\n              var sites: IPropertyPaneDropdownOption[] = [];\n              sites.push({key:this.context.pageContext.web.absoluteUrl, text:'This Site'});\n              sites.push({key:'other', text:'Other Site (Specify Url)'});\n              for (var _key in response.value) {\n                  if (this.context.pageContext.web.absoluteUrl != response.value[_key]['Url']){\n                    sites.push({key: response.value[_key]['Url'], text: response.value[_key]['Title']});\n                  }\n            }\n            this._siteOptions = sites;\n            this.properties.siteOptions = sites;\n\n          this._getListTitles(this.properties.chartConfig[0].dataurl)\n            .then((response2) => {\n              this.properties.listOptions = response2.value.map((list: ISPList) => {\n                return {\n                  key: list.Title,\n                  text: list.Title\n                };\n              });\n              this.properties.chartConfig[0].lists = this.properties.listOptions;\n              this._getListColumns(this.properties.chartConfig[0].list,this.properties.chartConfig[0].url)\n              .then((response3) => {\n                var col: IPropertyPaneDropdownOption[] = [];\n                for (var __key in response3.value) {\n                    col.push({key: response3.value[__key]['InternalName'], text: response3.value[__key]['Title']});\n                }\n                this._columnOptions = col;\n                this.colsDisabled = false;\n                this.listDisabled = false;\n                this.context.propertyPane.refresh();\n                this.context.statusRenderer.clearLoadingIndicator(this.domElement);\n                this.render();\n              });\n            });\n          });\n        });\n      }\n  }\n\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\n    let columnPropertyOptions: any;\n\n      columnPropertyOptions = [\n        {\n        groupName: 'General Options',\n        groupFields: [\n                PropertyPaneTextField('description', {\n                  label: 'Web Part Title'\n                }),\n                PropertyPaneSlider('numCharts', {\n                  label: 'Number of Charts',\n                  min: 1,\n                  max: 10\n                }),\n                PropertyPaneSlider('maxResults', {\n                  label: 'Max # of list items',\n                  min: 1,\n                  max: 1000\n                })\n          ]\n        }\n      ];\n\n      for (var _i = 0; _i < this.properties.numCharts; _i++) {\n        columnPropertyOptions.push(\n          {\n            groupName: \"Chart \" + (_i + 1) + \" Configuration\",\n            groupFields:[\n                PropertyPaneTextField('chartConfig[' + _i + '][\"title\"]', {\n                  label: \"Chart Title\"\n                }),\n                PropertyPaneTextField('chartConfig[' + _i + '][\"description\"]', {\n                  label: \"Description \"\n                }),\n                PropertyPaneDropdown('chartConfig[' + _i + '][\"type\"]', {\n                  label: 'Chart Type',\n                  options: this._chartTypeOptions\n                }),\n                PropertyPaneDropdown('chartConfig[' + _i + '][\"size\"]', {\n                  label: 'Chart Size',\n                  options: this._chartSizeOptions\n                }),\n                PropertyPaneButton('chartConfig[' + _i + '][\"theme\"]', {\n                  buttonType: 0,\n                  text: 'Generate Theme',\n                  icon: 'Color',\n                  onClick: ((val) => {\n                    return new Date().valueOf();\n                    })\n                }),\n                PropertyPaneDropdown('chartConfig[' + _i + '][\"url\"]', {\n                  label: 'Chart Data Source',\n                  options: this.properties.siteOptions\n                }),\n                PropertyPaneTextField('chartConfig[' + _i + '][\"dataurl\"]', {\n                  label: 'Chart Site Url (i.e. https://contoso.sharepoint.com/path)',\n                  disabled: this.properties.chartConfig[_i].dataUrlDisabled\n                }),\n                PropertyPaneDropdown('chartConfig[' + _i + '][\"list\"]', {\n                  label: 'List Data Source',\n                  options: this.properties.chartConfig[_i].lists,\n                  disabled: this.properties.chartConfig[_i].listsDisabled\n                }),\n                PropertyPaneDropdown('chartConfig[' + _i + '][\"col1\"]', {\n                  label: 'Label Column',\n                  options: this.properties.chartConfig[_i].columns,\n                  disabled: this.properties.chartConfig[_i].colsDisabled\n                }),\n                PropertyPaneDropdown('chartConfig[' + _i + '][\"col2\"]', {\n                  label: 'Data Column',\n                  options: this.properties.chartConfig[_i].columns,\n                  disabled: this.properties.chartConfig[_i].colsDisabled\n                }),\n                PropertyPaneDropdown('chartConfig[' + _i + '][\"unique\"]', {\n                  label: 'Unique Identifier',\n                  options: this.properties.chartConfig[_i].columns,\n                  disabled: this.properties.chartConfig[_i].colsDisabled\n                }),\n                PropertyPaneDropdown('chartConfig[' + _i + '][\"act\"]', {\n                  label: 'Operation',\n                  options: this._chartColActions,\n                  disabled: this.properties.chartConfig[_i].colsDisabled\n                })\n            ]\n          });\n      }\n\n    return {\n      pages: [\n        {\n          header: {\n            description: strings.PropertyPaneDescription\n          },\n          groups: columnPropertyOptions\n        }\n      ]\n    };\n  }\n\n  protected onPropertyPaneConfigurationComplete(){\n    this.render();\n  }\n\n  private _getSiteRootWeb(): Promise<string[]> {\n\n    return this.context.spHttpClient.get(this.context.pageContext.web.absoluteUrl + `/_api/Site/RootWeb?$select=Title,Url`, SPHttpClient.configurations.v1)\n    .then((response: SPHttpClientResponse) => {\n      return response.json();\n    });\n  }\n\n  private _getSites(rootWebUrl: string): Promise<ISPLists> {\n    return this.context.spHttpClient.get(rootWebUrl + `/_api/web/webs?$select=Title,Url`, SPHttpClient.configurations.v1)\n    .then((response: SPHttpClientResponse) => {\n      return response.json();\n    });\n  }\n\n  private _getListTitles(site: string): Promise<ISPLists> {\n    return this.context.spHttpClient.get(site + `/_api/web/lists?$filter=Hidden eq false and BaseType eq 0`, SPHttpClient.configurations.v1)\n      .then((response: SPHttpClientResponse) => {\n        return response.json();\n      });\n  }\n\n  private _getListColumns(listName: string,listsite: string): Promise<any> {\n    return this.context.spHttpClient.get(listsite + `/_api/web/lists/GetByTitle('${listName}')/Fields?$filter=Hidden eq false and ReadOnlyField eq false and TypeAsString ne 'User' and TypeAsString ne 'Lookup'`, SPHttpClient.configurations.v1)\n      .then((response: SPHttpClientResponse) => {\n        return response.json();\n      });\n  }\n\n  public getData(chartConfig: Object){\n    return this.context.spHttpClient.get(chartConfig['dataurl'] + `/_api/web/lists/GetByTitle(\\'${chartConfig['list']}\\')/items?$orderby=Id desc&$limit=10&$top=${this.properties.maxResults}`, SPHttpClient.configurations.v1)\n    .then((response: SPHttpClientResponse) => {\n      return response.json();\n    });\n  }\n\n  private _updateListTitles(siteUrl: string,_chartConfig: ChartConfiguration): void {\n      this._getListTitles(siteUrl).then((response) => {\n              var respLists: IPropertyPaneDropdownOption[] = [];\n              for (var _key in response.value) {\n                    respLists.push({key: response.value[_key]['Title'], text: response.value[_key]['Title']});\n            }\n            this._dropdownOptions = respLists;\n            _chartConfig.lists = respLists;\n            this.context.propertyPane.refresh();\n      }).catch((err) => {\n        this.context.statusRenderer.clearLoadingIndicator(this.domElement);\n        this.context.statusRenderer.renderError(this.domElement,\"There was an error loading your list, please verify the selected list has Calendar Events or choose a new list.\");\n      });\n  }\n\n  private _updateListColumns(siteUrl: string, listName: string, _chartConfig: ChartConfiguration): void {\n      this._getListColumns(listName,siteUrl).then((response) => {\n              var respLists: IPropertyPaneDropdownOption[] = [];\n              console.log(response.value);\n              for (var _key in response.value) {\n                    respLists.push({key: response.value[_key]['InternalName'], text: response.value[_key]['Title']});\n            }\n            this._columnOptions = respLists;\n            _chartConfig.columns = respLists;\n            this.context.propertyPane.refresh();\n      }).catch((err) => {\n        this.context.statusRenderer.clearLoadingIndicator(this.domElement);\n        this.context.statusRenderer.renderError(this.domElement,\"There was an error loading your list, please verify the selected list has Calendar Events or choose a new list.\");\n      });\n  }\n\n}\n"],"sourceRoot":"..\\..\\..\\src"}